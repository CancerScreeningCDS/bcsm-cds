{
  "resourceType" : "Library",
  "id" : "ScreeningEligibleActions",
  "text" : {
    "status" : "extensions",
    "div" : "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">Screening Eligible Actions</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">ScreeningEligibleActions</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">1.0.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-ScreeningEligibleActions.html\">Screening Eligible Actions</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.2.0/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-02-28 23:16:14+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">MITRE</td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><code>http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1</code></li>\n                  \n                    <li><code>http://cancerscreeningcds.github.io/bcsm-cds/Library/FHIRHelpers|4.0.1</code></li>\n                  \n                    <li><a href=\"Library-DataElements.html\">DataElementsversion: null1.0.0)</a></li>\n                  \n                    <li><a href=\"Library-BCSMCommonFunctions.html\">BCSM Common Functionsversion: null1.0.0)</a></li>\n                  \n                    <li><a href=\"CodeSystem-plan-definition-action-code-system.html\">Plan Definition Action Code System</a></li>\n                  \n                    <li><a href=\"CodeSystem-screening-observation-code-system.html\">Screening Observation Code System</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>act-eligible</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>end-noteligible-notassignedfemaleatbirth</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>end-noteligible-currentbreastcancer</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>end-noteligible-bilatmastectomy</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>act-dxtesting</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Data Requirements:</b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Type</b></th><th><b>Profile</b></th><th><b>MS</b></th><th><b>Code Filter</b></th></tr>\n              \n                <tr>\n                  <th>Patient</th>\n                  <th>http://hl7.org/fhir/StructureDefinition/Patient</th>\n                  <th/>\n                  <th>\n                    \n                  </th>\n                </tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">/*  \n  Author: CMS Alliance to Modernize Healthcare, operated by THE MITRE Corporation.\n\n  (C) 2024 The MITRE Corporation. All Rights Reserved. \n  Approved for Public Release: 24-2711. \n  Distribution Unlimited.\n\n  Unless otherwise noted, this work is available under an Apache 2.0 license. \n  It was produced by the MITRE Corporation for the Division of Cancer Prevention \n  and Control, Centers for Disease Control and Prevention in accordance with the \n  Statement of Work, contract number 75FCMC18D0047, task order number 75D30123F17931.\n*/\n\nlibrary ScreeningEligibleActions version '1.0.0'\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers  version '4.0.1' called FHIRHelpers\n\ninclude DataElements version '1.0.0' called DataElements\ninclude BCSMCommonFunctions version '1.0.0' called BCSMCommon\n\ncodesystem &quot;ActCode&quot;: 'http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/plan-definition-action-code-system'\ncodesystem &quot;LOCAL&quot;: 'http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/screening-observation-code-system'\n\n// Act Codes\ncode &quot;Eligible for screening&quot;: 'eligible' from &quot;ActCode&quot; display 'Eligible for screening'\ncode &quot;Not eligible for screening&quot;: 'noteligible' from &quot;ActCode&quot; display 'Not eligible for screening'\ncode &quot;Diagnostic testing&quot;:  'diagtesting' from &quot;ActCode&quot; display 'Diagnostic testing'\n// Reason Codes\ncode &quot;Eligible for screening reason&quot;: 'eligibleforscreening' from &quot;LOCAL&quot; display 'Eligible for screening'\ncode &quot;Not assigned female at birth&quot;: 'notassignedfemaleatbirth' from &quot;LOCAL&quot; display 'Not assigned female at birth'\ncode &quot;Current breast cancer&quot;: 'currentbreastcancer' from &quot;LOCAL&quot; display 'Current breast cancer'\ncode &quot;Bilateral mastectomy&quot;:  'bilatmastectomy' from &quot;LOCAL&quot; display 'Bilateral mastectomy'\ncode &quot;New or worsening breast symptoms or findings&quot;:  'breastsymptomsorfindings' from &quot;LOCAL&quot; display 'New or worsening breast symptoms or findings'\n\ncontext Patient\n\ndefine &quot;act-eligible&quot;:\n  {\n\t\tcode: &quot;Eligible for screening&quot;,\n    reason: &quot;Eligible for screening reason&quot;,\n    documentation: BCSMCommon.SourceDocumentationOther\n\t}\n\ndefine &quot;end-noteligible-notassignedfemaleatbirth&quot;:\n  {    \n\t\tcode: &quot;Not eligible for screening&quot;,\n    reason: &quot;Not assigned female at birth&quot;,\n    documentation: BCSMCommon.SourceDocumentationUSPSTF\n\t}\n\ndefine &quot;end-noteligible-currentbreastcancer&quot;:\n  {\n\t\tcode: &quot;Not eligible for screening&quot;,\n    reason: &quot;Current breast cancer&quot;,\n    documentation: BCSMCommon.SourceDocumentationUSPSTF\n\t}  \n\ndefine &quot;end-noteligible-bilatmastectomy&quot;:  \n  {\n\t\tcode: &quot;Not eligible for screening&quot;,\n    reason: &quot;Bilateral mastectomy&quot;,\n    documentation: BCSMCommon.SourceDocumentationOther\n\t} \n\ndefine &quot;act-dxtesting&quot;:\n  {\n\t\tcode: &quot;Diagnostic testing&quot;,\n    reason: &quot;New or worsening breast symptoms or findings&quot;,\n    documentation: BCSMCommon.SourceDocumentationOther\n\t} \n\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (26812 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+json</th></tr>\n              <tr><td><pre><code>Encoded data (43076 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"
  },
  "contained" : [{
    "resourceType" : "Parameters",
    "id" : "options",
    "parameter" : [{
      "name" : "translatorVersion",
      "valueString" : "3.11.0"
    },
    {
      "name" : "option",
      "valueString" : "EnableAnnotations"
    },
    {
      "name" : "option",
      "valueString" : "EnableLocators"
    },
    {
      "name" : "option",
      "valueString" : "DisableListDemotion"
    },
    {
      "name" : "option",
      "valueString" : "DisableListPromotion"
    },
    {
      "name" : "format",
      "valueString" : "JSON"
    },
    {
      "name" : "format",
      "valueString" : "XML"
    },
    {
      "name" : "analyzeDataRequirements",
      "valueBoolean" : true
    },
    {
      "name" : "collapseDataRequirements",
      "valueBoolean" : true
    },
    {
      "name" : "compatibilityLevel",
      "valueString" : "1.5"
    },
    {
      "name" : "enableCqlOnly",
      "valueBoolean" : false
    },
    {
      "name" : "errorLevel",
      "valueString" : "Error"
    },
    {
      "name" : "signatureLevel",
      "valueString" : "Overloads"
    },
    {
      "name" : "validateUnits",
      "valueBoolean" : false
    },
    {
      "name" : "verifyOnly",
      "valueBoolean" : true
    }]
  }],
  "extension" : [{
    "url" : "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference" : {
      "reference" : "#options"
    }
  },
  {
    "url" : "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference" : {
      "reference" : "Device/cqf-tooling"
    }
  }],
  "url" : "http://cancerscreeningcds.github.io/bcsm-cds/Library/ScreeningEligibleActions",
  "version" : "1.0.0",
  "name" : "ScreeningEligibleActions",
  "title" : "Screening Eligible Actions",
  "status" : "draft",
  "type" : {
    "coding" : [{
      "system" : "http://terminology.hl7.org/CodeSystem/library-type",
      "code" : "logic-library"
    }]
  },
  "date" : "2025-02-28T23:16:14+00:00",
  "publisher" : "MITRE",
  "contact" : [{
    "name" : "MITRE",
    "telecom" : [{
      "system" : "url",
      "value" : "https://www.mitre.org/"
    }]
  }],
  "relatedArtifact" : [{
    "type" : "depends-on",
    "display" : "FHIR model information",
    "resource" : "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  },
  {
    "type" : "depends-on",
    "display" : "Library FHIRHelpers",
    "resource" : "http://cancerscreeningcds.github.io/bcsm-cds/Library/FHIRHelpers|4.0.1"
  },
  {
    "type" : "depends-on",
    "display" : "Library DataElements",
    "resource" : "http://cancerscreeningcds.github.io/bcsm-cds/Library/DataElements|1.0.0"
  },
  {
    "type" : "depends-on",
    "display" : "Library BCSMCommon",
    "resource" : "http://cancerscreeningcds.github.io/bcsm-cds/Library/BCSMCommonFunctions|1.0.0"
  },
  {
    "type" : "depends-on",
    "display" : "Code system ActCode",
    "resource" : "http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/plan-definition-action-code-system"
  },
  {
    "type" : "depends-on",
    "display" : "Code system LOCAL",
    "resource" : "http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/screening-observation-code-system"
  }],
  "parameter" : [{
    "name" : "Patient",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Patient"
  },
  {
    "name" : "act-eligible",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Resource"
  },
  {
    "name" : "end-noteligible-notassignedfemaleatbirth",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Resource"
  },
  {
    "name" : "end-noteligible-currentbreastcancer",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Resource"
  },
  {
    "name" : "end-noteligible-bilatmastectomy",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Resource"
  },
  {
    "name" : "act-dxtesting",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Resource"
  }],
  "dataRequirement" : [{
    "type" : "Patient",
    "profile" : ["http://hl7.org/fhir/StructureDefinition/Patient"]
  }],
  "content" : [{
    "contentType" : "text/cql",
    "data" : "LyogIAogIEF1dGhvcjogQ01TIEFsbGlhbmNlIHRvIE1vZGVybml6ZSBIZWFsdGhjYXJlLCBvcGVyYXRlZCBieSBUSEUgTUlUUkUgQ29ycG9yYXRpb24uCgogIChDKSAyMDI0IFRoZSBNSVRSRSBDb3Jwb3JhdGlvbi4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4gCiAgQXBwcm92ZWQgZm9yIFB1YmxpYyBSZWxlYXNlOiAyNC0yNzExLiAKICBEaXN0cmlidXRpb24gVW5saW1pdGVkLgoKICBVbmxlc3Mgb3RoZXJ3aXNlIG5vdGVkLCB0aGlzIHdvcmsgaXMgYXZhaWxhYmxlIHVuZGVyIGFuIEFwYWNoZSAyLjAgbGljZW5zZS4gCiAgSXQgd2FzIHByb2R1Y2VkIGJ5IHRoZSBNSVRSRSBDb3Jwb3JhdGlvbiBmb3IgdGhlIERpdmlzaW9uIG9mIENhbmNlciBQcmV2ZW50aW9uIAogIGFuZCBDb250cm9sLCBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24gaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSAKICBTdGF0ZW1lbnQgb2YgV29yaywgY29udHJhY3QgbnVtYmVyIDc1RkNNQzE4RDAwNDcsIHRhc2sgb3JkZXIgbnVtYmVyIDc1RDMwMTIzRjE3OTMxLgoqLwoKbGlicmFyeSBTY3JlZW5pbmdFbGlnaWJsZUFjdGlvbnMgdmVyc2lvbiAnMS4wLjAnCgp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJIZWxwZXJzICB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzCgppbmNsdWRlIERhdGFFbGVtZW50cyB2ZXJzaW9uICcxLjAuMCcgY2FsbGVkIERhdGFFbGVtZW50cwppbmNsdWRlIEJDU01Db21tb25GdW5jdGlvbnMgdmVyc2lvbiAnMS4wLjAnIGNhbGxlZCBCQ1NNQ29tbW9uCgpjb2Rlc3lzdGVtICJBY3RDb2RlIjogJ2h0dHA6Ly9jYW5jZXJzY3JlZW5pbmdjZHMuZ2l0aHViLmlvL2Jjc20tY2RzL0NvZGVTeXN0ZW0vcGxhbi1kZWZpbml0aW9uLWFjdGlvbi1jb2RlLXN5c3RlbScKY29kZXN5c3RlbSAiTE9DQUwiOiAnaHR0cDovL2NhbmNlcnNjcmVlbmluZ2Nkcy5naXRodWIuaW8vYmNzbS1jZHMvQ29kZVN5c3RlbS9zY3JlZW5pbmctb2JzZXJ2YXRpb24tY29kZS1zeXN0ZW0nCgovLyBBY3QgQ29kZXMKY29kZSAiRWxpZ2libGUgZm9yIHNjcmVlbmluZyI6ICdlbGlnaWJsZScgZnJvbSAiQWN0Q29kZSIgZGlzcGxheSAnRWxpZ2libGUgZm9yIHNjcmVlbmluZycKY29kZSAiTm90IGVsaWdpYmxlIGZvciBzY3JlZW5pbmciOiAnbm90ZWxpZ2libGUnIGZyb20gIkFjdENvZGUiIGRpc3BsYXkgJ05vdCBlbGlnaWJsZSBmb3Igc2NyZWVuaW5nJwpjb2RlICJEaWFnbm9zdGljIHRlc3RpbmciOiAgJ2RpYWd0ZXN0aW5nJyBmcm9tICJBY3RDb2RlIiBkaXNwbGF5ICdEaWFnbm9zdGljIHRlc3RpbmcnCi8vIFJlYXNvbiBDb2Rlcwpjb2RlICJFbGlnaWJsZSBmb3Igc2NyZWVuaW5nIHJlYXNvbiI6ICdlbGlnaWJsZWZvcnNjcmVlbmluZycgZnJvbSAiTE9DQUwiIGRpc3BsYXkgJ0VsaWdpYmxlIGZvciBzY3JlZW5pbmcnCmNvZGUgIk5vdCBhc3NpZ25lZCBmZW1hbGUgYXQgYmlydGgiOiAnbm90YXNzaWduZWRmZW1hbGVhdGJpcnRoJyBmcm9tICJMT0NBTCIgZGlzcGxheSAnTm90IGFzc2lnbmVkIGZlbWFsZSBhdCBiaXJ0aCcKY29kZSAiQ3VycmVudCBicmVhc3QgY2FuY2VyIjogJ2N1cnJlbnRicmVhc3RjYW5jZXInIGZyb20gIkxPQ0FMIiBkaXNwbGF5ICdDdXJyZW50IGJyZWFzdCBjYW5jZXInCmNvZGUgIkJpbGF0ZXJhbCBtYXN0ZWN0b215IjogICdiaWxhdG1hc3RlY3RvbXknIGZyb20gIkxPQ0FMIiBkaXNwbGF5ICdCaWxhdGVyYWwgbWFzdGVjdG9teScKY29kZSAiTmV3IG9yIHdvcnNlbmluZyBicmVhc3Qgc3ltcHRvbXMgb3IgZmluZGluZ3MiOiAgJ2JyZWFzdHN5bXB0b21zb3JmaW5kaW5ncycgZnJvbSAiTE9DQUwiIGRpc3BsYXkgJ05ldyBvciB3b3JzZW5pbmcgYnJlYXN0IHN5bXB0b21zIG9yIGZpbmRpbmdzJwoKY29udGV4dCBQYXRpZW50CgpkZWZpbmUgImFjdC1lbGlnaWJsZSI6CiAgewoJCWNvZGU6ICJFbGlnaWJsZSBmb3Igc2NyZWVuaW5nIiwKICAgIHJlYXNvbjogIkVsaWdpYmxlIGZvciBzY3JlZW5pbmcgcmVhc29uIiwKICAgIGRvY3VtZW50YXRpb246IEJDU01Db21tb24uU291cmNlRG9jdW1lbnRhdGlvbk90aGVyCgl9CgpkZWZpbmUgImVuZC1ub3RlbGlnaWJsZS1ub3Rhc3NpZ25lZGZlbWFsZWF0YmlydGgiOgogIHsgICAgCgkJY29kZTogIk5vdCBlbGlnaWJsZSBmb3Igc2NyZWVuaW5nIiwKICAgIHJlYXNvbjogIk5vdCBhc3NpZ25lZCBmZW1hbGUgYXQgYmlydGgiLAogICAgZG9jdW1lbnRhdGlvbjogQkNTTUNvbW1vbi5Tb3VyY2VEb2N1bWVudGF0aW9uVVNQU1RGCgl9CgpkZWZpbmUgImVuZC1ub3RlbGlnaWJsZS1jdXJyZW50YnJlYXN0Y2FuY2VyIjoKICB7CgkJY29kZTogIk5vdCBlbGlnaWJsZSBmb3Igc2NyZWVuaW5nIiwKICAgIHJlYXNvbjogIkN1cnJlbnQgYnJlYXN0IGNhbmNlciIsCiAgICBkb2N1bWVudGF0aW9uOiBCQ1NNQ29tbW9uLlNvdXJjZURvY3VtZW50YXRpb25VU1BTVEYKCX0gIAoKZGVmaW5lICJlbmQtbm90ZWxpZ2libGUtYmlsYXRtYXN0ZWN0b215IjogIAogIHsKCQljb2RlOiAiTm90IGVsaWdpYmxlIGZvciBzY3JlZW5pbmciLAogICAgcmVhc29uOiAiQmlsYXRlcmFsIG1hc3RlY3RvbXkiLAogICAgZG9jdW1lbnRhdGlvbjogQkNTTUNvbW1vbi5Tb3VyY2VEb2N1bWVudGF0aW9uT3RoZXIKCX0gCgpkZWZpbmUgImFjdC1keHRlc3RpbmciOgogIHsKCQljb2RlOiAiRGlhZ25vc3RpYyB0ZXN0aW5nIiwKICAgIHJlYXNvbjogIk5ldyBvciB3b3JzZW5pbmcgYnJlYXN0IHN5bXB0b21zIG9yIGZpbmRpbmdzIiwKICAgIGRvY3VtZW50YXRpb246IEJDU01Db21tb24uU291cmNlRG9jdW1lbnRhdGlvbk90aGVyCgl9IAoK"
  },
  {
    "contentType" : "application/elm+xml",
    "data" : ""
  },
  {
    "contentType" : "application/elm+json",
    "data" : ""
  }]
}