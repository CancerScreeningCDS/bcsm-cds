<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1" localId="0">
   <annotation translatorVersion="3.11.0" translatorOptions="EnableAnnotations,EnableLocators,DisableListDemotion,DisableListPromotion" signatureLevel="Overloads" xsi:type="a:CqlToElmInfo"/>
   <annotation xsi:type="a:Annotation">
      <a:s r="1884">
         <a:s>/*  
  Author: CMS Alliance to Modernize Healthcare, operated by THE MITRE Corporation.

  (C) 2024 The MITRE Corporation. All Rights Reserved. 
  Approved for Public Release: 24-2711. 
  Distribution Unlimited.

  Unless otherwise noted, this work is available under an Apache 2.0 license. 
  It was produced by the MITRE Corporation for the Division of Cancer Prevention 
  and Control, Centers for Disease Control and Prevention in accordance with the 
  Statement of Work, contract number 75FCMC18D0047, task order number 75D30123F17931.
*/

library BCSMCommonFunctions version '1.0.0'</a:s>
      </a:s>
   </annotation>
   <identifier id="BCSMCommonFunctions" system="http://cancerscreeningcds.github.io/bcsm-cds" version="1.0.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localId="1" localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="206" locator="16:1-16:26" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="4.0.1">
         <annotation xsi:type="a:Annotation">
            <a:s r="206">
               <a:s>using </a:s>
               <a:s>
                  <a:s>FHIR</a:s>
               </a:s>
               <a:s> version '4.0.1'</a:s>
            </a:s>
         </annotation>
      </def>
   </usings>
   <includes>
      <def localId="207" locator="18:1-18:63" localIdentifier="C3F" path="http://cancerscreeningcds.github.io/bcsm-cds/CDSConnectCommonsforFHIRv401" version="1.0.0">
         <annotation xsi:type="a:Annotation">
            <a:s r="207">
               <a:s>include </a:s>
               <a:s>
                  <a:s>CDSConnectCommonsforFHIRv401</a:s>
               </a:s>
               <a:s> version '1.0.0' called C3F</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="208" locator="19:1-19:54" localIdentifier="FHIRHelpers" path="http://cancerscreeningcds.github.io/bcsm-cds/FHIRHelpers" version="4.0.1">
         <annotation xsi:type="a:Annotation">
            <a:s r="208">
               <a:s>include </a:s>
               <a:s>
                  <a:s>FHIRHelpers</a:s>
               </a:s>
               <a:s> version '4.0.1' called FHIRHelpers</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="209" locator="20:1-20:68" localIdentifier="CSMCommonFunctions" path="http://cancerscreeningcds.github.io/bcsm-cds/CSMCommonFunctions" version="1.0.0">
         <annotation xsi:type="a:Annotation">
            <a:s r="209">
               <a:s>include </a:s>
               <a:s>
                  <a:s>CSMCommonFunctions</a:s>
               </a:s>
               <a:s> version '1.0.0' called CSMCommonFunctions</a:s>
            </a:s>
         </annotation>
      </def>
   </includes>
   <parameters>
      <def localId="220" locator="30:1-30:59" name="OverdueDefault" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="220">
               <a:s>parameter &quot;OverdueDefault&quot; </a:s>
               <a:s r="222">
                  <a:s>System.Quantity</a:s>
               </a:s>
               <a:s> default </a:s>
               <a:s r="221">
                  <a:s>3 months</a:s>
               </a:s>
            </a:s>
         </annotation>
         <default localId="221" locator="30:52-30:59" value="3" unit="months" xsi:type="Quantity"/>
         <parameterTypeSpecifier localId="222" locator="30:28-30:42" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
      </def>
      <def localId="223" locator="31:1-31:55" name="DueDefault" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="223">
               <a:s>parameter &quot;DueDefault&quot; </a:s>
               <a:s r="225">
                  <a:s>System.Quantity</a:s>
               </a:s>
               <a:s> default </a:s>
               <a:s r="224">
                  <a:s>2 months</a:s>
               </a:s>
            </a:s>
         </annotation>
         <default localId="224" locator="31:48-31:55" value="2" unit="months" xsi:type="Quantity"/>
         <parameterTypeSpecifier localId="225" locator="31:24-31:38" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
      </def>
      <def localId="226" locator="32:1-32:58" name="OverdueAnnual" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="226">
               <a:s>parameter &quot;OverdueAnnual&quot; </a:s>
               <a:s r="228">
                  <a:s>System.Quantity</a:s>
               </a:s>
               <a:s> default </a:s>
               <a:s r="227">
                  <a:s>2 months</a:s>
               </a:s>
            </a:s>
         </annotation>
         <default localId="227" locator="32:51-32:58" value="2" unit="months" xsi:type="Quantity"/>
         <parameterTypeSpecifier localId="228" locator="32:27-32:41" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
      </def>
      <def localId="229" locator="33:1-33:54" name="DueAnnual" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="229">
               <a:s>parameter &quot;DueAnnual&quot; </a:s>
               <a:s r="231">
                  <a:s>System.Quantity</a:s>
               </a:s>
               <a:s> default </a:s>
               <a:s r="230">
                  <a:s>2 months</a:s>
               </a:s>
            </a:s>
         </annotation>
         <default localId="230" locator="33:47-33:54" value="2" unit="months" xsi:type="Quantity"/>
         <parameterTypeSpecifier localId="231" locator="33:23-33:37" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
      </def>
      <def localId="232" locator="34:1-34:59" name="OverdueFollowup" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="232">
               <a:s>parameter &quot;OverdueFollowup&quot; </a:s>
               <a:s r="234">
                  <a:s>System.Quantity</a:s>
               </a:s>
               <a:s> default </a:s>
               <a:s r="233">
                  <a:s>90 days</a:s>
               </a:s>
            </a:s>
         </annotation>
         <default localId="233" locator="34:53-34:59" value="90" unit="days" xsi:type="Quantity"/>
         <parameterTypeSpecifier localId="234" locator="34:29-34:43" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
      </def>
   </parameters>
   <codeSystems>
      <def localId="210" locator="22:1-22:112" name="FlagCode" id="http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/recommendation-flag-code-system" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="210">
               <a:s>codesystem &quot;FlagCode&quot;: 'http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/recommendation-flag-code-system'</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="217" locator="27:1-27:95" name="cpg-activity-type-cs" id="http://hl7.org/fhir/uv/cpg/CodeSystem/cpg-activity-type-cs" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="217">
               <a:s>codesystem &quot;cpg-activity-type-cs&quot;: 'http://hl7.org/fhir/uv/cpg/CodeSystem/cpg-activity-type-cs'</a:s>
            </a:s>
         </annotation>
      </def>
   </codeSystems>
   <codes>
      <def localId="211" locator="24:1-24:60" name="OVERDUE" id="overdue" display="Overdue" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="211">
               <a:s>code &quot;OVERDUE&quot; : 'overdue' from </a:s>
               <a:s r="212">
                  <a:s>&quot;FlagCode&quot;</a:s>
               </a:s>
               <a:s> display 'Overdue'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="212" locator="24:33-24:42" name="FlagCode"/>
      </def>
      <def localId="213" locator="25:1-25:48" name="DUE" id="due" display="Due" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="213">
               <a:s>code &quot;DUE&quot; : 'due' from </a:s>
               <a:s r="214">
                  <a:s>&quot;FlagCode&quot;</a:s>
               </a:s>
               <a:s> display 'Due'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="214" locator="25:25-25:34" name="FlagCode"/>
      </def>
      <def localId="215" locator="26:1-26:60" name="NOT DUE" id="not-due" display="Not due" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="215">
               <a:s>code &quot;NOT DUE&quot; : 'not-due' from </a:s>
               <a:s r="216">
                  <a:s>&quot;FlagCode&quot;</a:s>
               </a:s>
               <a:s> display 'Not due'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="216" locator="26:33-26:42" name="FlagCode"/>
      </def>
      <def localId="218" locator="28:1-28:104" name="Record an inference" id="record-inference" display="Record an inference" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="218">
               <a:s>code &quot;Record an inference&quot;: 'record-inference' from </a:s>
               <a:s r="219">
                  <a:s>&quot;cpg-activity-type-cs&quot;</a:s>
               </a:s>
               <a:s> display 'Record an inference'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="219" locator="28:53-28:74" name="cpg-activity-type-cs"/>
      </def>
   </codes>
   <contexts>
      <def localId="238" locator="36:1-36:15" name="Patient"/>
   </contexts>
   <statements>
      <def localId="236" locator="36:1-36:15" name="Patient" context="Patient">
         <expression localId="237" xsi:type="SingletonFrom">
            <operand localId="235" locator="36:1-36:15" dataType="fhir:Patient" templateId="http://hl7.org/fhir/StructureDefinition/Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="240" locator="42:1-45:3" name="SourceDocumentationACS" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="240">
               <a:s>//------------------------------------------------------------------------------
// Recommendation model
//------------------------------------------------------------------------------

define SourceDocumentationACS:
  </a:s>
               <a:s r="241">
                  <a:s>{
    </a:s>
                  <a:s>
                     <a:s>label: </a:s>
                     <a:s r="242">
                        <a:s>'ACS'</a:s>
                     </a:s>
                  </a:s>
                  <a:s>
  }</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="241" locator="43:3-45:3" xsi:type="Tuple">
            <element name="label">
               <value localId="242" locator="44:12-44:16" valueType="t:String" value="ACS" xsi:type="Literal"/>
            </element>
         </expression>
      </def>
      <def localId="244" locator="47:1-50:3" name="SourceDocumentationUSPSTF" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="244">
               <a:s>define SourceDocumentationUSPSTF:
  </a:s>
               <a:s r="245">
                  <a:s>{
    </a:s>
                  <a:s>
                     <a:s>label: </a:s>
                     <a:s r="246">
                        <a:s>'USPSTF'</a:s>
                     </a:s>
                  </a:s>
                  <a:s>
  }</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="245" locator="48:3-50:3" xsi:type="Tuple">
            <element name="label">
               <value localId="246" locator="49:12-49:19" valueType="t:String" value="USPSTF" xsi:type="Literal"/>
            </element>
         </expression>
      </def>
      <def localId="248" locator="52:1-55:3" name="SourceDocumentationOther" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="248">
               <a:s>define SourceDocumentationOther:
  </a:s>
               <a:s r="249">
                  <a:s>{
    </a:s>
                  <a:s>
                     <a:s>label: </a:s>
                     <a:s r="250">
                        <a:s>'Other'</a:s>
                     </a:s>
                  </a:s>
                  <a:s>
  }</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="249" locator="53:3-55:3" xsi:type="Tuple">
            <element name="label">
               <value localId="250" locator="54:12-54:18" valueType="t:String" value="Other" xsi:type="Literal"/>
            </element>
         </expression>
      </def>
      <def localId="251" locator="57:1-92:3" name="SetRecommendation" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="251">
               <a:s>define function SetRecommendation(          
    code System.Code,
    reason System.Code,
    documentation Tuple{label System.String},
    timingAge Tuple{value Decimal, code String},
    event System.DateTime,
    repeat Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}) 
    returns Tuple {code System.Code,reason System.Code,documentation Tuple{label System.String},timingAge Tuple{value Decimal, code String},
      timingTiming Tuple{event List&lt;System.String>,repeat Tuple{boundsPeriod Tuple{start System.String},frequency System.Integer,period System.Decimal,periodUnit System.String}},
      flag System.Code
    }: 
  </a:s>
               <a:s r="875">
                  <a:s r="875">
                     <a:s>
                        <a:s r="310">
                           <a:s r="311">
                              <a:s>
                                 <a:s>code</a:s>
                              </a:s>
                           </a:s>
                           <a:s> C</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="312">
                           <a:s>startDate: </a:s>
                           <a:s r="313">
                              <a:s>if </a:s>
                              <a:s r="316">
                                 <a:s r="314">
                                    <a:s>timingAge</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                              <a:s> then </a:s>
                              <a:s r="325">
                                 <a:s>CalculateStartDateByAge(</a:s>
                                 <a:s r="317">
                                    <a:s>timingAge</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="340"> else null</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
  </a:s>
                        <a:s r="342">
                           <a:s>nextdue: </a:s>
                           <a:s r="343">
                              <a:s>if </a:s>
                              <a:s r="346">
                                 <a:s r="344">
                                    <a:s>event</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                              <a:s> then </a:s>
                              <a:s r="347">
                                 <a:s>event</a:s>
                              </a:s>
                              <a:s> 
    else </a:s>
                              <a:s r="369">
                                 <a:s>CalculateNextDueByCodeAndInterval(</a:s>
                                 <a:s r="352">
                                    <a:s>ToConcept(</a:s>
                                    <a:s r="348">
                                       <a:s>C</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="354">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="355">
                                    <a:s>repeat</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
  </a:s>
                        <a:s r="617">
                           <a:s>timingTiming: </a:s>
                           <a:s r="618">
                              <a:s>{
      </a:s>
                              <a:s>
                                 <a:s>event: </a:s>
                                 <a:s r="619">
                                    <a:s>{</a:s>
                                    <a:s r="624">
                                       <a:s>ToString(</a:s>
                                       <a:s r="620">
                                          <a:s>nextdue</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>}</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
      </a:s>
                              <a:s>
                                 <a:s>repeat: </a:s>
                                 <a:s r="626">
                                    <a:s>{
        </a:s>
                                    <a:s>
                                       <a:s>boundsPeriod: </a:s>
                                       <a:s r="627">
                                          <a:s>{
          </a:s>
                                          <a:s>
                                             <a:s>start: </a:s>
                                             <a:s r="632">
                                                <a:s>ToString(</a:s>
                                                <a:s r="628">
                                                   <a:s>startDate</a:s>
                                                </a:s>
                                                <a:s>)</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>
        }</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>,
        </a:s>
                                    <a:s>
                                       <a:s>frequency: </a:s>
                                       <a:s r="635">
                                          <a:s r="634">
                                             <a:s>repeat</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="635">
                                             <a:s>frequency</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>,
        </a:s>
                                    <a:s>
                                       <a:s>period: </a:s>
                                       <a:s r="637">
                                          <a:s r="636">
                                             <a:s>repeat</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="637">
                                             <a:s>period</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>,
        </a:s>
                                    <a:s>
                                       <a:s>periodUnit: </a:s>
                                       <a:s r="639">
                                          <a:s r="638">
                                             <a:s>repeat</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="639">
                                             <a:s>periodUnit</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>
      }</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
    }</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
  </a:s>
                        <a:s r="640">
                           <a:s>flag: </a:s>
                           <a:s r="656">
                              <a:s>EvaluateFlag(</a:s>
                              <a:s r="641">
                                 <a:s>repeat</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="642">
                                 <a:s>nextdue</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>    
  </a:s>
                     <a:s r="867">
                        <a:s>return      
  </a:s>
                        <a:s r="868">
                           <a:s>Tuple {
    </a:s>
                           <a:s>
                              <a:s>code: </a:s>
                              <a:s r="869">
                                 <a:s>C</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>reason: </a:s>
                              <a:s r="870">
                                 <a:s>reason</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>documentation: </a:s>
                              <a:s r="871">
                                 <a:s>documentation</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>timingAge: </a:s>
                              <a:s r="872">
                                 <a:s>timingAge</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>timingTiming: </a:s>
                              <a:s r="873">
                                 <a:s>timingTiming</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>flag: </a:s>
                              <a:s r="874">
                                 <a:s>flag</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
  }</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="875" locator="68:3-92:3" xsi:type="Query">
            <source localId="310" locator="68:3-68:8" alias="C">
               <expression localId="311" locator="68:3-68:6" name="code" xsi:type="OperandRef"/>
            </source>
            <let localId="312" locator="69:7-69:91" identifier="startDate">
               <expression localId="313" locator="69:18-69:91" xsi:type="If">
                  <condition localId="316" locator="69:21-69:41" xsi:type="Not">
                     <operand localId="315" locator="69:21-69:41" xsi:type="IsNull">
                        <operand localId="314" locator="69:21-69:29" name="timingAge" xsi:type="OperandRef"/>
                     </operand>
                  </condition>
                  <then localId="325" locator="69:48-69:81" name="CalculateStartDateByAge" xsi:type="FunctionRef">
                     <operand localId="317" locator="69:72-69:80" name="timingAge" xsi:type="OperandRef"/>
                  </then>
                  <else localId="341" asType="t:Date" xsi:type="As">
                     <operand localId="340" locator="69:88-69:91" xsi:type="Null"/>
                  </else>
               </expression>
            </let>
            <let localId="342" locator="70:3-71:75" identifier="nextdue">
               <expression localId="343" locator="70:12-71:75" xsi:type="If">
                  <condition localId="346" locator="70:15-70:31" xsi:type="Not">
                     <operand localId="345" locator="70:15-70:31" xsi:type="IsNull">
                        <operand localId="344" locator="70:15-70:19" name="event" xsi:type="OperandRef"/>
                     </operand>
                  </condition>
                  <then localId="347" locator="70:38-70:42" name="event" xsi:type="OperandRef"/>
                  <else localId="369" locator="71:10-71:75" name="CalculateNextDueByCodeAndInterval" xsi:type="FunctionRef">
                     <operand localId="352" locator="71:44-71:55" xsi:type="ToConcept">
                        <signature localId="353" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="348" locator="71:54" name="C" xsi:type="AliasRef"/>
                     </operand>
                     <operand localId="371" xsi:type="ToDateTime">
                        <signature localId="372" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="354" locator="71:58-71:66" name="startDate" xsi:type="QueryLetRef"/>
                     </operand>
                     <operand localId="355" locator="71:69-71:74" name="repeat" xsi:type="OperandRef"/>
                  </else>
               </expression>
            </let>
            <let localId="617" locator="72:3-82:5" identifier="timingTiming">
               <expression localId="618" locator="72:17-82:5" xsi:type="Tuple">
                  <element name="event">
                     <value localId="619" locator="73:14-73:32" xsi:type="List">
                        <element localId="624" locator="73:15-73:31" xsi:type="ToString">
                           <signature localId="625" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="620" locator="73:24-73:30" name="nextdue" xsi:type="QueryLetRef"/>
                        </element>
                     </value>
                  </element>
                  <element name="repeat">
                     <value localId="626" locator="74:15-81:7" xsi:type="Tuple">
                        <element name="boundsPeriod">
                           <value localId="627" locator="75:23-77:9" xsi:type="Tuple">
                              <element name="start">
                                 <value localId="632" locator="76:18-76:36" xsi:type="ToString">
                                    <signature localId="633" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                    <operand localId="628" locator="76:27-76:35" name="startDate" xsi:type="QueryLetRef"/>
                                 </value>
                              </element>
                           </value>
                        </element>
                        <element name="frequency">
                           <value localId="635" locator="78:20-78:35" path="frequency" xsi:type="Property">
                              <source localId="634" locator="78:20-78:25" name="repeat" xsi:type="OperandRef"/>
                           </value>
                        </element>
                        <element name="period">
                           <value localId="637" locator="79:17-79:29" path="period" xsi:type="Property">
                              <source localId="636" locator="79:17-79:22" name="repeat" xsi:type="OperandRef"/>
                           </value>
                        </element>
                        <element name="periodUnit">
                           <value localId="639" locator="80:21-80:37" path="periodUnit" xsi:type="Property">
                              <source localId="638" locator="80:21-80:26" name="repeat" xsi:type="OperandRef"/>
                           </value>
                        </element>
                     </value>
                  </element>
               </expression>
            </let>
            <let localId="640" locator="83:3-83:37" identifier="flag">
               <expression localId="656" locator="83:9-83:37" name="EvaluateFlag" xsi:type="FunctionRef">
                  <operand localId="657" xsi:type="As">
                     <operand localId="641" locator="83:22-83:27" name="repeat" xsi:type="OperandRef"/>
                     <asTypeSpecifier localId="658" xsi:type="ChoiceTypeSpecifier">
                        <choice localId="659" name="fhir:Timing.Repeat" xsi:type="NamedTypeSpecifier"/>
                        <choice localId="660" xsi:type="TupleTypeSpecifier">
                           <element localId="661" name="frequency">
                              <elementType localId="662" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                           </element>
                           <element localId="663" name="period">
                              <elementType localId="664" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                           </element>
                           <element localId="665" name="periodUnit">
                              <elementType localId="666" name="t:String" xsi:type="NamedTypeSpecifier"/>
                           </element>
                        </choice>
                     </asTypeSpecifier>
                  </operand>
                  <operand localId="642" locator="83:30-83:36" name="nextdue" xsi:type="QueryLetRef"/>
               </expression>
            </let>
            <return localId="867" locator="84:3-92:3">
               <expression localId="868" locator="85:3-92:3" xsi:type="Tuple">
                  <element name="code">
                     <value localId="869" locator="86:11" name="C" xsi:type="AliasRef"/>
                  </element>
                  <element name="reason">
                     <value localId="870" locator="87:13-87:18" name="reason" xsi:type="OperandRef"/>
                  </element>
                  <element name="documentation">
                     <value localId="871" locator="88:20-88:32" name="documentation" xsi:type="OperandRef"/>
                  </element>
                  <element name="timingAge">
                     <value localId="872" locator="89:16-89:24" name="timingAge" xsi:type="OperandRef"/>
                  </element>
                  <element name="timingTiming">
                     <value localId="873" locator="90:19-90:30" name="timingTiming" xsi:type="QueryLetRef"/>
                  </element>
                  <element name="flag">
                     <value localId="874" locator="91:11-91:14" name="flag" xsi:type="QueryLetRef"/>
                  </element>
               </expression>
            </return>
         </expression>
         <operand localId="253" name="code">
            <operandTypeSpecifier localId="252" locator="58:10-58:20" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="255" name="reason">
            <operandTypeSpecifier localId="254" locator="59:12-59:22" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="259" name="documentation">
            <operandTypeSpecifier localId="256" locator="60:19-60:44" xsi:type="TupleTypeSpecifier">
               <element localId="257" locator="60:25-60:43" name="label">
                  <elementType localId="258" locator="60:31-60:43" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
         <operand localId="265" name="timingAge">
            <operandTypeSpecifier localId="260" locator="61:15-61:47" xsi:type="TupleTypeSpecifier">
               <element localId="261" locator="61:21-61:33" name="value">
                  <elementType localId="262" locator="61:27-61:33" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="263" locator="61:36-61:46" name="code">
                  <elementType localId="264" locator="61:41-61:46" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
         <operand localId="267" name="event">
            <operandTypeSpecifier localId="266" locator="62:11-62:25" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="275" name="repeat">
            <operandTypeSpecifier localId="268" locator="63:12-63:89" xsi:type="TupleTypeSpecifier">
               <element localId="269" locator="63:18-63:41" name="frequency">
                  <elementType localId="270" locator="63:28-63:41" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="271" locator="63:43-63:63" name="period">
                  <elementType localId="272" locator="63:50-63:63" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="273" locator="63:65-63:88" name="periodUnit">
                  <elementType localId="274" locator="63:76-63:88" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="318" locator="94:1-95:113" name="CalculateStartDateByAge" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="318">
               <a:s>define function CalculateStartDateByAge(timingAge Tuple{value Decimal, code String}): 
  </a:s>
               <a:s r="876">
                  <a:s r="876">
                     <a:s r="878">
                        <a:s r="877">
                           <a:s>Patient</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="878">
                           <a:s>birthDate</a:s>
                        </a:s>
                     </a:s>
                     <a:s> + </a:s>
                     <a:s r="879">
                        <a:s>System.Quantity{</a:s>
                        <a:s>
                           <a:s>value: </a:s>
                           <a:s r="882">
                              <a:s>(</a:s>
                              <a:s r="882">
                                 <a:s r="881">
                                    <a:s>timingAge</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="882">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s>
                           <a:s>unit: </a:s>
                           <a:s r="886">
                              <a:s r="883">
                                 <a:s>FHIRHelpers</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="886">
                                 <a:s>ToCalendarUnit(</a:s>
                                 <a:s r="885">
                                    <a:s r="884">
                                       <a:s>timingAge</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="885">
                                       <a:s>code</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>}</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="876" locator="95:3-95:113" xsi:type="Add">
            <signature localId="888" name="t:Date" xsi:type="NamedTypeSpecifier"/>
            <signature localId="889" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
            <operand localId="887" name="ToDate" libraryName="FHIRHelpers" xsi:type="FunctionRef">
               <operand localId="878" locator="95:3-95:19" path="birthDate" xsi:type="Property">
                  <source localId="877" locator="95:3-95:9" name="Patient" xsi:type="ExpressionRef"/>
               </operand>
            </operand>
            <operand localId="879" locator="95:23-95:113" classType="t:Quantity" xsi:type="Instance">
               <element name="value">
                  <value localId="882" locator="95:46-95:62" path="value" xsi:type="Property">
                     <source localId="881" locator="95:47-95:55" name="timingAge" xsi:type="OperandRef"/>
                  </value>
               </element>
               <element name="unit">
                  <value localId="886" locator="95:71-95:112" name="ToCalendarUnit" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="885" locator="95:98-95:111" path="code" xsi:type="Property">
                        <source localId="884" locator="95:98-95:106" name="timingAge" xsi:type="OperandRef"/>
                     </operand>
                  </value>
               </element>
            </operand>
         </expression>
         <operand localId="324" name="timingAge">
            <operandTypeSpecifier localId="319" locator="94:51-94:83" xsi:type="TupleTypeSpecifier">
               <element localId="320" locator="94:57-94:69" name="value">
                  <elementType localId="321" locator="94:63-94:69" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="322" locator="94:72-94:82" name="code">
                  <elementType localId="323" locator="94:77-94:82" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="356" locator="132:1-165:7" name="CalculateNextDueByCodeAndInterval" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="356">
               <a:s>//------------------------------------------------------------------------------
// Calculated next due date
//------------------------------------------------------------------------------
//  +startDate, +repeat, +lastreport = use startDate if > lastreport else lastreport + repeat
//  +startDate, +repeat, -lastreport = use startDate
//  +startDate, -repeat, +lastreport = use startDate if > lastreport else no prediction (non-repeating and ?completed)
//  +startDate, -repeat, -lastreport = use startDate
//  -startDate, +repeat, +lastreport = use lastreport + repeat
//  -startDate, +repeat, -lastreport = use today
//  -startDate, -repeat, +lastreport = no prediction (non-repeating and ?completed)
//  -startDate, -repeat, -lastreport = use today
define function CalculateNextDueByCodeAndInterval(code Concept, 
    startDate DateTime,
    repeat Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}):
  </a:s>
               <a:s r="1157">
                  <a:s r="1157">
                     <a:s>
                        <a:s r="992">
                           <a:s r="993">
                              <a:s>
                                 <a:s>code</a:s>
                              </a:s>
                           </a:s>
                           <a:s> C</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="994">
                           <a:s>lastReport: </a:s>
                           <a:s r="996">
                              <a:s>MostRecentDiagnosticReportByCode(</a:s>
                              <a:s r="995">
                                 <a:s>C</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  </a:s>
                     <a:s r="997">
                        <a:s>return
    </a:s>
                        <a:s r="998">
                           <a:s>case
      // +startDate, +repeat, +lastReport
      </a:s>
                           <a:s r="999">
                              <a:s>when </a:s>
                              <a:s r="1000">
                                 <a:s r="1001">
                                    <a:s r="1004">
                                       <a:s r="1002">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is not null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1006">
                                       <a:s>RepeatIsValid(</a:s>
                                       <a:s r="1005">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1009">
                                    <a:s r="1007">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="1010">
                                 <a:s>if </a:s>
                                 <a:s r="1011">
                                    <a:s r="1012">
                                       <a:s>startDate</a:s>
                                    </a:s>
                                    <a:s> > </a:s>
                                    <a:s r="1013">
                                       <a:s r="1017">
                                          <a:s r="1014">
                                             <a:s>FHIRHelpers</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="1017">
                                             <a:s>ToDateTime(</a:s>
                                             <a:s r="1016">
                                                <a:s r="1015">
                                                   <a:s>lastReport</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="1016">
                                                   <a:s>effective</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>)</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="1020">
                                          <a:s>DateTime</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> then </a:s>
                                 <a:s r="1023">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s> 
        else </a:s>
                                 <a:s r="1024">
                                    <a:s>date from </a:s>
                                    <a:s r="1034">
                                       <a:s>AddIntervalToDateTime(</a:s>
                                       <a:s r="1025">
                                          <a:s r="1029">
                                             <a:s r="1026">
                                                <a:s>FHIRHelpers</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="1029">
                                                <a:s>ToDateTime(</a:s>
                                                <a:s r="1028">
                                                   <a:s r="1027">
                                                      <a:s>lastReport</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="1028">
                                                      <a:s>effective</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>)</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="1032">
                                             <a:s>DateTime</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>, </a:s>
                                       <a:s r="1033">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      // +startDate, +repeat, -lastReport
      </a:s>
                           <a:s r="1038">
                              <a:s>when </a:s>
                              <a:s r="1039">
                                 <a:s r="1040">
                                    <a:s r="1043">
                                       <a:s r="1041">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is not null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1045">
                                       <a:s>RepeatIsValid(</a:s>
                                       <a:s r="1044">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1047">
                                    <a:s r="1046">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="1048">
                                 <a:s>startDate</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      // +startDate, -repeat, +lastReport
      </a:s>
                           <a:s r="1049">
                              <a:s>when </a:s>
                              <a:s r="1050">
                                 <a:s r="1051">
                                    <a:s r="1054">
                                       <a:s r="1052">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is not null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1056">
                                       <a:s r="1055">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s> is null</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1059">
                                    <a:s r="1057">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="1060">
                                 <a:s>if </a:s>
                                 <a:s r="1061">
                                    <a:s r="1062">
                                       <a:s>startDate</a:s>
                                    </a:s>
                                    <a:s> > </a:s>
                                    <a:s r="1063">
                                       <a:s r="1067">
                                          <a:s r="1064">
                                             <a:s>FHIRHelpers</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="1067">
                                             <a:s>ToDateTime(</a:s>
                                             <a:s r="1066">
                                                <a:s r="1065">
                                                   <a:s>lastReport</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="1066">
                                                   <a:s>effective</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>)</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="1070">
                                          <a:s>DateTime</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> then </a:s>
                                 <a:s r="1073">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s r="1074"> else null</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      // +startDate, -repeat, -lastReport
      </a:s>
                           <a:s r="1076">
                              <a:s>when </a:s>
                              <a:s r="1077">
                                 <a:s r="1078">
                                    <a:s r="1081">
                                       <a:s r="1079">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is not null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1083">
                                       <a:s r="1082">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s> is null</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1085">
                                    <a:s r="1084">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="1086">
                                 <a:s>startDate</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      // -startDate, +repeat, +lastReport
      </a:s>
                           <a:s r="1087">
                              <a:s>when </a:s>
                              <a:s r="1088">
                                 <a:s r="1089">
                                    <a:s r="1091">
                                       <a:s r="1090">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1093">
                                       <a:s>RepeatIsValid(</a:s>
                                       <a:s r="1092">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1096">
                                    <a:s r="1094">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="1097">
                                 <a:s>date from </a:s>
                                 <a:s r="1107">
                                    <a:s>AddIntervalToDateTime(</a:s>
                                    <a:s r="1098">
                                       <a:s r="1102">
                                          <a:s r="1099">
                                             <a:s>FHIRHelpers</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="1102">
                                             <a:s>ToDateTime(</a:s>
                                             <a:s r="1101">
                                                <a:s r="1100">
                                                   <a:s>lastReport</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="1101">
                                                   <a:s>effective</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>)</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="1105">
                                          <a:s>DateTime</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="1106">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      // -startDate, +repeat, -lastReport
      </a:s>
                           <a:s r="1108">
                              <a:s>when </a:s>
                              <a:s r="1109">
                                 <a:s r="1110">
                                    <a:s r="1112">
                                       <a:s r="1111">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1114">
                                       <a:s>RepeatIsValid(</a:s>
                                       <a:s r="1113">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1116">
                                    <a:s r="1115">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="1119">
                                 <a:s>Today()</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
      // -startDate, -repeat, +lastReport
      </a:s>
                           <a:s r="1120">
                              <a:s>when </a:s>
                              <a:s r="1121">
                                 <a:s r="1122">
                                    <a:s r="1124">
                                       <a:s r="1123">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1127">
                                       <a:s r="1126">
                                          <a:s>RepeatIsValid(</a:s>
                                          <a:s r="1125">
                                             <a:s>repeat</a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s> is false</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1130">
                                    <a:s r="1128">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="1131"> then
        null</a:s>
                           </a:s>
                           <a:s>
      // -startDate, -repeat, -lastReport
      </a:s>
                           <a:s r="1132">
                              <a:s>when </a:s>
                              <a:s r="1133">
                                 <a:s r="1134">
                                    <a:s r="1136">
                                       <a:s r="1135">
                                          <a:s>startDate</a:s>
                                       </a:s>
                                       <a:s> is null</a:s>
                                    </a:s>
                                    <a:s> and </a:s>
                                    <a:s r="1139">
                                       <a:s r="1138">
                                          <a:s>RepeatIsValid(</a:s>
                                          <a:s r="1137">
                                             <a:s>repeat</a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s> is false</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="1141">
                                    <a:s r="1140">
                                       <a:s>lastReport</a:s>
                                    </a:s>
                                    <a:s> is null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="1144">
                                 <a:s>Today()</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="1145">
      else null  
    end</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1157" locator="135:3-165:7" xsi:type="Query">
            <source localId="992" locator="135:3-135:8" alias="C">
               <expression localId="993" locator="135:3-135:6" name="code" xsi:type="OperandRef"/>
            </source>
            <let localId="994" locator="136:7-136:53" identifier="lastReport">
               <expression localId="996" locator="136:19-136:53" name="MostRecentDiagnosticReportByCode" xsi:type="FunctionRef">
                  <operand localId="995" locator="136:52" name="C" xsi:type="AliasRef"/>
               </expression>
            </let>
            <return localId="997" locator="137:3-165:7">
               <expression localId="998" locator="138:5-165:7" xsi:type="Case">
                  <caseItem localId="999" locator="140:7-142:110">
                     <when localId="1000" locator="140:12-140:85" xsi:type="And">
                        <operand localId="1001" locator="140:12-140:58" xsi:type="And">
                           <operand localId="1004" locator="140:12-140:32" xsi:type="Not">
                              <operand localId="1003" locator="140:12-140:32" xsi:type="IsNull">
                                 <operand localId="1002" locator="140:12-140:20" name="startDate" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                           <operand localId="1006" locator="140:38-140:58" name="RepeatIsValid" xsi:type="FunctionRef">
                              <operand localId="1005" locator="140:52-140:57" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1009" locator="140:64-140:85" xsi:type="Not">
                           <operand localId="1008" locator="140:64-140:85" xsi:type="IsNull">
                              <operand localId="1007" locator="140:64-140:73" name="lastReport" xsi:type="QueryLetRef"/>
                           </operand>
                        </operand>
                     </when>
                     <then localId="1010" locator="141:9-142:110" xsi:type="If">
                        <condition localId="1011" locator="141:12-141:79" xsi:type="Greater">
                           <signature localId="1021" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1022" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1012" locator="141:12-141:20" name="startDate" xsi:type="OperandRef"/>
                           <operand localId="1013" locator="141:24-141:79" strict="false" xsi:type="As">
                              <operand localId="1017" locator="141:24-141:67" name="ToDateTime" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                                 <signature localId="1019" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                                 <operand localId="1018" asType="fhir:dateTime" xsi:type="As">
                                    <operand localId="1016" locator="141:47-141:66" path="effective" xsi:type="Property">
                                       <source localId="1015" locator="141:47-141:56" name="lastReport" xsi:type="QueryLetRef"/>
                                    </operand>
                                 </operand>
                              </operand>
                              <asTypeSpecifier localId="1020" locator="141:72-141:79" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           </operand>
                        </condition>
                        <then localId="1023" locator="141:86-141:94" name="startDate" xsi:type="OperandRef"/>
                        <else localId="1036" xsi:type="ToDateTime">
                           <signature localId="1037" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1024" locator="142:14-142:110" xsi:type="DateFrom">
                              <operand localId="1034" locator="142:24-142:110" name="AddIntervalToDateTime" xsi:type="FunctionRef">
                                 <operand localId="1025" locator="142:46-142:101" strict="false" xsi:type="As">
                                    <operand localId="1029" locator="142:46-142:89" name="ToDateTime" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                                       <signature localId="1031" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                                       <operand localId="1030" asType="fhir:dateTime" xsi:type="As">
                                          <operand localId="1028" locator="142:69-142:88" path="effective" xsi:type="Property">
                                             <source localId="1027" locator="142:69-142:78" name="lastReport" xsi:type="QueryLetRef"/>
                                          </operand>
                                       </operand>
                                    </operand>
                                    <asTypeSpecifier localId="1032" locator="142:94-142:101" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                                 </operand>
                                 <operand localId="1033" locator="142:104-142:109" name="repeat" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                        </else>
                     </then>
                  </caseItem>
                  <caseItem localId="1038" locator="144:7-145:17">
                     <when localId="1039" locator="144:12-144:81" xsi:type="And">
                        <operand localId="1040" locator="144:12-144:58" xsi:type="And">
                           <operand localId="1043" locator="144:12-144:32" xsi:type="Not">
                              <operand localId="1042" locator="144:12-144:32" xsi:type="IsNull">
                                 <operand localId="1041" locator="144:12-144:20" name="startDate" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                           <operand localId="1045" locator="144:38-144:58" name="RepeatIsValid" xsi:type="FunctionRef">
                              <operand localId="1044" locator="144:52-144:57" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1047" locator="144:64-144:81" xsi:type="IsNull">
                           <operand localId="1046" locator="144:64-144:73" name="lastReport" xsi:type="QueryLetRef"/>
                        </operand>
                     </when>
                     <then localId="1048" locator="145:9-145:17" name="startDate" xsi:type="OperandRef"/>
                  </caseItem>
                  <caseItem localId="1049" locator="147:7-148:104">
                     <when localId="1050" locator="147:12-147:78" xsi:type="And">
                        <operand localId="1051" locator="147:12-147:51" xsi:type="And">
                           <operand localId="1054" locator="147:12-147:32" xsi:type="Not">
                              <operand localId="1053" locator="147:12-147:32" xsi:type="IsNull">
                                 <operand localId="1052" locator="147:12-147:20" name="startDate" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                           <operand localId="1056" locator="147:38-147:51" xsi:type="IsNull">
                              <operand localId="1055" locator="147:38-147:43" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1059" locator="147:57-147:78" xsi:type="Not">
                           <operand localId="1058" locator="147:57-147:78" xsi:type="IsNull">
                              <operand localId="1057" locator="147:57-147:66" name="lastReport" xsi:type="QueryLetRef"/>
                           </operand>
                        </operand>
                     </when>
                     <then localId="1060" locator="148:9-148:104" xsi:type="If">
                        <condition localId="1061" locator="148:12-148:79" xsi:type="Greater">
                           <signature localId="1071" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1072" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1062" locator="148:12-148:20" name="startDate" xsi:type="OperandRef"/>
                           <operand localId="1063" locator="148:24-148:79" strict="false" xsi:type="As">
                              <operand localId="1067" locator="148:24-148:67" name="ToDateTime" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                                 <signature localId="1069" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                                 <operand localId="1068" asType="fhir:dateTime" xsi:type="As">
                                    <operand localId="1066" locator="148:47-148:66" path="effective" xsi:type="Property">
                                       <source localId="1065" locator="148:47-148:56" name="lastReport" xsi:type="QueryLetRef"/>
                                    </operand>
                                 </operand>
                              </operand>
                              <asTypeSpecifier localId="1070" locator="148:72-148:79" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           </operand>
                        </condition>
                        <then localId="1073" locator="148:86-148:94" name="startDate" xsi:type="OperandRef"/>
                        <else localId="1075" asType="t:DateTime" xsi:type="As">
                           <operand localId="1074" locator="148:101-148:104" xsi:type="Null"/>
                        </else>
                     </then>
                  </caseItem>
                  <caseItem localId="1076" locator="150:7-151:17">
                     <when localId="1077" locator="150:12-150:74" xsi:type="And">
                        <operand localId="1078" locator="150:12-150:51" xsi:type="And">
                           <operand localId="1081" locator="150:12-150:32" xsi:type="Not">
                              <operand localId="1080" locator="150:12-150:32" xsi:type="IsNull">
                                 <operand localId="1079" locator="150:12-150:20" name="startDate" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                           <operand localId="1083" locator="150:38-150:51" xsi:type="IsNull">
                              <operand localId="1082" locator="150:38-150:43" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1085" locator="150:57-150:74" xsi:type="IsNull">
                           <operand localId="1084" locator="150:57-150:66" name="lastReport" xsi:type="QueryLetRef"/>
                        </operand>
                     </when>
                     <then localId="1086" locator="151:9-151:17" name="startDate" xsi:type="OperandRef"/>
                  </caseItem>
                  <caseItem localId="1087" locator="153:7-154:105">
                     <when localId="1088" locator="153:12-153:81" xsi:type="And">
                        <operand localId="1089" locator="153:12-153:54" xsi:type="And">
                           <operand localId="1091" locator="153:12-153:28" xsi:type="IsNull">
                              <operand localId="1090" locator="153:12-153:20" name="startDate" xsi:type="OperandRef"/>
                           </operand>
                           <operand localId="1093" locator="153:34-153:54" name="RepeatIsValid" xsi:type="FunctionRef">
                              <operand localId="1092" locator="153:48-153:53" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1096" locator="153:60-153:81" xsi:type="Not">
                           <operand localId="1095" locator="153:60-153:81" xsi:type="IsNull">
                              <operand localId="1094" locator="153:60-153:69" name="lastReport" xsi:type="QueryLetRef"/>
                           </operand>
                        </operand>
                     </when>
                     <then localId="1147" xsi:type="ToDateTime">
                        <signature localId="1148" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1097" locator="154:9-154:105" xsi:type="DateFrom">
                           <operand localId="1107" locator="154:19-154:105" name="AddIntervalToDateTime" xsi:type="FunctionRef">
                              <operand localId="1098" locator="154:41-154:96" strict="false" xsi:type="As">
                                 <operand localId="1102" locator="154:41-154:84" name="ToDateTime" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                                    <signature localId="1104" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                                    <operand localId="1103" asType="fhir:dateTime" xsi:type="As">
                                       <operand localId="1101" locator="154:64-154:83" path="effective" xsi:type="Property">
                                          <source localId="1100" locator="154:64-154:73" name="lastReport" xsi:type="QueryLetRef"/>
                                       </operand>
                                    </operand>
                                 </operand>
                                 <asTypeSpecifier localId="1105" locator="154:89-154:96" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                              </operand>
                              <operand localId="1106" locator="154:99-154:104" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </then>
                  </caseItem>
                  <caseItem localId="1108" locator="156:7-157:15">
                     <when localId="1109" locator="156:12-156:77" xsi:type="And">
                        <operand localId="1110" locator="156:12-156:54" xsi:type="And">
                           <operand localId="1112" locator="156:12-156:28" xsi:type="IsNull">
                              <operand localId="1111" locator="156:12-156:20" name="startDate" xsi:type="OperandRef"/>
                           </operand>
                           <operand localId="1114" locator="156:34-156:54" name="RepeatIsValid" xsi:type="FunctionRef">
                              <operand localId="1113" locator="156:48-156:53" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1116" locator="156:60-156:77" xsi:type="IsNull">
                           <operand localId="1115" locator="156:60-156:69" name="lastReport" xsi:type="QueryLetRef"/>
                        </operand>
                     </when>
                     <then localId="1150" xsi:type="ToDateTime">
                        <signature localId="1151" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1119" locator="157:9-157:15" xsi:type="Today"/>
                     </then>
                  </caseItem>
                  <caseItem localId="1120" locator="159:7-160:12">
                     <when localId="1121" locator="159:12-159:90" xsi:type="And">
                        <operand localId="1122" locator="159:12-159:63" xsi:type="And">
                           <operand localId="1124" locator="159:12-159:28" xsi:type="IsNull">
                              <operand localId="1123" locator="159:12-159:20" name="startDate" xsi:type="OperandRef"/>
                           </operand>
                           <operand localId="1127" locator="159:34-159:63" xsi:type="IsFalse">
                              <operand localId="1126" locator="159:34-159:54" name="RepeatIsValid" xsi:type="FunctionRef">
                                 <operand localId="1125" locator="159:48-159:53" name="repeat" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                        </operand>
                        <operand localId="1130" locator="159:69-159:90" xsi:type="Not">
                           <operand localId="1129" locator="159:69-159:90" xsi:type="IsNull">
                              <operand localId="1128" locator="159:69-159:78" name="lastReport" xsi:type="QueryLetRef"/>
                           </operand>
                        </operand>
                     </when>
                     <then localId="1152" asType="t:DateTime" xsi:type="As">
                        <operand localId="1131" locator="160:9-160:12" xsi:type="Null"/>
                     </then>
                  </caseItem>
                  <caseItem localId="1132" locator="162:7-163:15">
                     <when localId="1133" locator="162:12-162:86" xsi:type="And">
                        <operand localId="1134" locator="162:12-162:63" xsi:type="And">
                           <operand localId="1136" locator="162:12-162:28" xsi:type="IsNull">
                              <operand localId="1135" locator="162:12-162:20" name="startDate" xsi:type="OperandRef"/>
                           </operand>
                           <operand localId="1139" locator="162:34-162:63" xsi:type="IsFalse">
                              <operand localId="1138" locator="162:34-162:54" name="RepeatIsValid" xsi:type="FunctionRef">
                                 <operand localId="1137" locator="162:48-162:53" name="repeat" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                        </operand>
                        <operand localId="1141" locator="162:69-162:86" xsi:type="IsNull">
                           <operand localId="1140" locator="162:69-162:78" name="lastReport" xsi:type="QueryLetRef"/>
                        </operand>
                     </when>
                     <then localId="1154" xsi:type="ToDateTime">
                        <signature localId="1155" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1144" locator="163:9-163:15" xsi:type="Today"/>
                     </then>
                  </caseItem>
                  <else localId="1156" asType="t:DateTime" xsi:type="As">
                     <operand localId="1145" locator="164:12-164:15" xsi:type="Null"/>
                  </else>
               </expression>
            </return>
         </expression>
         <operand localId="358" name="code">
            <operandTypeSpecifier localId="357" locator="132:56-132:62" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="360" name="startDate">
            <operandTypeSpecifier localId="359" locator="133:15-133:22" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="368" name="repeat">
            <operandTypeSpecifier localId="361" locator="134:12-134:89" xsi:type="TupleTypeSpecifier">
               <element localId="362" locator="134:18-134:41" name="frequency">
                  <elementType localId="363" locator="134:28-134:41" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="364" locator="134:43-134:63" name="period">
                  <elementType localId="365" locator="134:50-134:63" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="366" locator="134:65-134:88" name="periodUnit">
                  <elementType localId="367" locator="134:76-134:88" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="377" locator="170:1-171:80" name="MostRecentDiagnosticReportByCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="377">
               <a:s>define function MostRecentDiagnosticReportByCode(code Concept):
    </a:s>
               <a:s r="1175">
                  <a:s r="1175">
                     <a:s r="1172">
                        <a:s>CSMCommonFunctions</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1175">
                        <a:s>MostRecentDiagnosticReport(</a:s>
                        <a:s r="1174">
                           <a:s>DiagnosticReportsByCode(</a:s>
                           <a:s r="1173">
                              <a:s>code</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1175" locator="171:5-171:80" name="MostRecentDiagnosticReport" libraryName="CSMCommonFunctions" xsi:type="FunctionRef">
            <operand localId="1174" locator="171:51-171:79" name="DiagnosticReportsByCode" xsi:type="FunctionRef">
               <operand localId="1173" locator="171:75-171:78" name="code" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand localId="379" name="code">
            <operandTypeSpecifier localId="378" locator="170:55-170:61" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="383" locator="173:1-175:26" name="DiagnosticReportsByCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="383">
               <a:s>define function DiagnosticReportsByCode(concept Concept):
  </a:s>
               <a:s r="1185">
                  <a:s r="1185">
                     <a:s>
                        <a:s r="1176">
                           <a:s r="1177">
                              <a:s r="1177">
                                 <a:s>[DiagnosticReport]</a:s>
                              </a:s>
                           </a:s>
                           <a:s> R</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1178">
                        <a:s>where </a:s>
                        <a:s r="1178">
                           <a:s r="1180">
                              <a:s r="1179">
                                 <a:s>R</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1180">
                                 <a:s>code</a:s>
                              </a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="1181">
                              <a:s>concept</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1185" locator="174:3-175:26" xsi:type="Query">
            <source localId="1176" locator="174:3-174:22" alias="R">
               <expression localId="1177" locator="174:3-174:20" dataType="fhir:DiagnosticReport" templateId="http://hl7.org/fhir/StructureDefinition/DiagnosticReport" xsi:type="Retrieve"/>
            </source>
            <where localId="1178" locator="175:5-175:26" xsi:type="Equivalent">
               <signature localId="1183" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
               <signature localId="1184" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
               <operand localId="1182" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand localId="1180" locator="175:11-175:16" path="code" scope="R" xsi:type="Property"/>
               </operand>
               <operand localId="1181" locator="175:20-175:26" name="concept" xsi:type="OperandRef"/>
            </where>
         </expression>
         <operand localId="385" name="concept">
            <operandTypeSpecifier localId="384" locator="173:49-173:55" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="407" locator="167:1-168:94" name="RepeatIsValid" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="407">
               <a:s>define function RepeatIsValid(repeat Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}):
  </a:s>
               <a:s r="1158">
                  <a:s r="1158">
                     <a:s r="1159">
                        <a:s r="1163">
                           <a:s r="1161">
                              <a:s r="1160">
                                 <a:s>repeat</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1161">
                                 <a:s>frequency</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is not null</a:s>
                        </a:s>
                        <a:s> and </a:s>
                        <a:s r="1167">
                           <a:s r="1165">
                              <a:s r="1164">
                                 <a:s>repeat</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1165">
                                 <a:s>period</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is not null</a:s>
                        </a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="1171">
                        <a:s r="1169">
                           <a:s r="1168">
                              <a:s>repeat</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="1169">
                              <a:s>periodUnit</a:s>
                           </a:s>
                        </a:s>
                        <a:s> is not null</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1158" locator="168:3-168:94" xsi:type="And">
            <operand localId="1159" locator="168:3-168:60" xsi:type="And">
               <operand localId="1163" locator="168:3-168:30" xsi:type="Not">
                  <operand localId="1162" locator="168:3-168:30" xsi:type="IsNull">
                     <operand localId="1161" locator="168:3-168:18" path="frequency" xsi:type="Property">
                        <source localId="1160" locator="168:3-168:8" name="repeat" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </operand>
               <operand localId="1167" locator="168:36-168:60" xsi:type="Not">
                  <operand localId="1166" locator="168:36-168:60" xsi:type="IsNull">
                     <operand localId="1165" locator="168:36-168:48" path="period" xsi:type="Property">
                        <source localId="1164" locator="168:36-168:41" name="repeat" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </operand>
            </operand>
            <operand localId="1171" locator="168:66-168:94" xsi:type="Not">
               <operand localId="1170" locator="168:66-168:94" xsi:type="IsNull">
                  <operand localId="1169" locator="168:66-168:82" path="periodUnit" xsi:type="Property">
                     <source localId="1168" locator="168:66-168:71" name="repeat" xsi:type="OperandRef"/>
                  </operand>
               </operand>
            </operand>
         </expression>
         <operand localId="415" name="repeat">
            <operandTypeSpecifier localId="408" locator="167:38-167:115" xsi:type="TupleTypeSpecifier">
               <element localId="409" locator="167:44-167:67" name="frequency">
                  <elementType localId="410" locator="167:54-167:67" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="411" locator="167:69-167:89" name="period">
                  <elementType localId="412" locator="167:76-167:89" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="413" locator="167:91-167:114" name="periodUnit">
                  <elementType localId="414" locator="167:102-167:114" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="458" locator="183:1-188:3" name="AddIntervalToDateTime" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="458">
               <a:s>define function AddIntervalToDateTime(startDateTime System.DateTime, 
    repeat Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}):
  </a:s>
               <a:s r="1214">
                  <a:s r="1214">
                     <a:s r="1215">
                        <a:s>startDateTime</a:s>
                     </a:s>
                     <a:s> + </a:s>
                     <a:s r="1216">
                        <a:s>System.Quantity {
    </a:s>
                        <a:s>
                           <a:s>value: </a:s>
                           <a:s r="1218">
                              <a:s r="1219">
                                 <a:s>(</a:s>
                                 <a:s r="1219">
                                    <a:s r="1221">
                                       <a:s r="1220">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="1221">
                                          <a:s>frequency</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> * </a:s>
                                    <a:s r="1223">
                                       <a:s r="1222">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="1223">
                                          <a:s>period</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="1229"> * 1.0</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
    </a:s>
                        <a:s>
                           <a:s>unit: </a:s>
                           <a:s r="1235">
                              <a:s r="1232">
                                 <a:s>FHIRHelpers</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1235">
                                 <a:s>ToCalendarUnit(</a:s>
                                 <a:s r="1234">
                                    <a:s r="1233">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1234">
                                       <a:s>periodUnit</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>
  }</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1214" locator="185:3-188:3" xsi:type="Add">
            <signature localId="1236" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            <signature localId="1237" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
            <operand localId="1215" locator="185:3-185:15" name="startDateTime" xsi:type="OperandRef"/>
            <operand localId="1216" locator="185:19-188:3" classType="t:Quantity" xsi:type="Instance">
               <element name="value">
                  <value localId="1218" locator="186:12-186:51" xsi:type="Multiply">
                     <signature localId="1230" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1231" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1219" locator="186:12-186:45" xsi:type="Multiply">
                        <signature localId="1227" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                        <signature localId="1228" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1225" xsi:type="ToDecimal">
                           <signature localId="1226" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1221" locator="186:13-186:28" path="frequency" xsi:type="Property">
                              <source localId="1220" locator="186:13-186:18" name="repeat" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1223" locator="186:32-186:44" path="period" xsi:type="Property">
                           <source localId="1222" locator="186:32-186:37" name="repeat" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                     <operand localId="1229" locator="186:49-186:51" valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
                  </value>
               </element>
               <element name="unit">
                  <value localId="1235" locator="187:11-187:55" name="ToCalendarUnit" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="1234" locator="187:38-187:54" path="periodUnit" xsi:type="Property">
                        <source localId="1233" locator="187:38-187:43" name="repeat" xsi:type="OperandRef"/>
                     </operand>
                  </value>
               </element>
            </operand>
         </expression>
         <operand localId="460" name="startDateTime">
            <operandTypeSpecifier localId="459" locator="183:53-183:67" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="468" name="repeat">
            <operandTypeSpecifier localId="461" locator="184:12-184:89" xsi:type="TupleTypeSpecifier">
               <element localId="462" locator="184:18-184:41" name="frequency">
                  <elementType localId="463" locator="184:28-184:41" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="464" locator="184:43-184:63" name="period">
                  <elementType localId="465" locator="184:50-184:63" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
               </element>
               <element localId="466" locator="184:65-184:88" name="periodUnit">
                  <elementType localId="467" locator="184:76-184:88" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="643" locator="221:1-229:5" name="EvaluateFlag" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="643">
               <a:s>//------------------------------------------------------------------------------
// flag due/overdue
//------------------------------------------------------------------------------

define function EvaluateFlag(repeat Choice&lt;FHIR.Timing.Repeat, Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}>, 
    nextDueDate DateTime):
  </a:s>
               <a:s r="1350">
                  <a:s r="1350">
                     <a:s>case
    </a:s>
                     <a:s r="1351">
                        <a:s>when </a:s>
                        <a:s r="1353">
                           <a:s>IntervalIsAnnual(</a:s>
                           <a:s r="1352">
                              <a:s>repeat</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>
      then </a:s>
                        <a:s r="1355">
                           <a:s>EvaluateFlagAnnual(</a:s>
                           <a:s r="1354">
                              <a:s>nextDueDate</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1356">
                        <a:s>when </a:s>
                        <a:s r="1358">
                           <a:s>IntervalIsBiennial(</a:s>
                           <a:s r="1357">
                              <a:s>repeat</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>
      then </a:s>
                        <a:s r="1360">
                           <a:s>EvaluateFlagBiennial(</a:s>
                           <a:s r="1359">
                              <a:s>nextDueDate</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    else </a:s>
                     <a:s r="1362">
                        <a:s>EvaluateFlagDefault(</a:s>
                        <a:s r="1361">
                           <a:s>nextDueDate</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>
  end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1350" locator="223:3-229:5" xsi:type="Case">
            <caseItem localId="1351" locator="224:5-225:42">
               <when localId="1353" locator="224:10-224:33" name="IntervalIsAnnual" xsi:type="FunctionRef">
                  <operand localId="1352" locator="224:27-224:32" name="repeat" xsi:type="OperandRef"/>
               </when>
               <then localId="1355" locator="225:12-225:42" name="EvaluateFlagAnnual" xsi:type="FunctionRef">
                  <operand localId="1354" locator="225:31-225:41" name="nextDueDate" xsi:type="OperandRef"/>
               </then>
            </caseItem>
            <caseItem localId="1356" locator="226:5-227:44">
               <when localId="1358" locator="226:10-226:35" name="IntervalIsBiennial" xsi:type="FunctionRef">
                  <operand localId="1357" locator="226:29-226:34" name="repeat" xsi:type="OperandRef"/>
               </when>
               <then localId="1360" locator="227:12-227:44" name="EvaluateFlagBiennial" xsi:type="FunctionRef">
                  <operand localId="1359" locator="227:33-227:43" name="nextDueDate" xsi:type="OperandRef"/>
               </then>
            </caseItem>
            <else localId="1362" locator="228:10-228:41" name="EvaluateFlagDefault" xsi:type="FunctionRef">
               <operand localId="1361" locator="228:30-228:40" name="nextDueDate" xsi:type="OperandRef"/>
            </else>
         </expression>
         <operand localId="653" name="repeat">
            <operandTypeSpecifier localId="652" locator="221:37-221:142" xsi:type="ChoiceTypeSpecifier">
               <choice localId="644" locator="221:44-221:61" name="fhir:Timing.Repeat" xsi:type="NamedTypeSpecifier"/>
               <choice localId="645" locator="221:64-221:141" xsi:type="TupleTypeSpecifier">
                  <element localId="646" locator="221:70-221:93" name="frequency">
                     <elementType localId="647" locator="221:80-221:93" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="648" locator="221:95-221:115" name="period">
                     <elementType localId="649" locator="221:102-221:115" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="650" locator="221:117-221:140" name="periodUnit">
                     <elementType localId="651" locator="221:128-221:140" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </element>
               </choice>
            </operandTypeSpecifier>
         </operand>
         <operand localId="655" name="nextDueDate">
            <operandTypeSpecifier localId="654" locator="222:17-222:24" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="670" locator="205:1-207:22" name="IntervalIsAnnual" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="670">
               <a:s>define function IntervalIsAnnual(repeat Choice&lt;FHIR.Timing.Repeat, Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}>):
  </a:s>
               <a:s r="1283">
                  <a:s r="1283">
                     <a:s>if </a:s>
                     <a:s r="1284">
                        <a:s r="1285">
                           <a:s r="1286">
                              <a:s r="1289">
                                 <a:s r="1288">
                                    <a:s r="1287">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1288">
                                       <a:s>frequency</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1289">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="1290"> = 1</a:s>
                           </a:s>
                           <a:s> and </a:s>
                           <a:s r="1293">
                              <a:s r="1296">
                                 <a:s r="1295">
                                    <a:s r="1294">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1295">
                                       <a:s>period</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1296">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="1297"> = 1</a:s>
                           </a:s>
                        </a:s>
                        <a:s> and </a:s>
                        <a:s r="1303">
                           <a:s r="1306">
                              <a:s r="1305">
                                 <a:s r="1304">
                                    <a:s>repeat</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1305">
                                    <a:s>periodUnit</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1306">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> = </a:s>
                           <a:s r="1307">
                              <a:s>'a'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s r="1310"> 
  then true else false</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1283" locator="206:3-207:22" xsi:type="If">
            <condition localId="1284" locator="206:6-206:93" xsi:type="And">
               <operand localId="1285" locator="206:6-206:59" xsi:type="And">
                  <operand localId="1286" locator="206:6-206:31" xsi:type="Equal">
                     <signature localId="1291" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1292" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1289" locator="206:6-206:27" path="value" xsi:type="Property">
                        <source localId="1288" locator="206:6-206:21" path="frequency" xsi:type="Property">
                           <source localId="1287" locator="206:6-206:11" name="repeat" xsi:type="OperandRef"/>
                        </source>
                     </operand>
                     <operand localId="1290" locator="206:31" valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </operand>
                  <operand localId="1293" locator="206:37-206:59" xsi:type="Equal">
                     <signature localId="1301" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1302" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1296" locator="206:37-206:55" path="value" xsi:type="Property">
                        <source localId="1295" locator="206:37-206:49" path="period" xsi:type="Property">
                           <source localId="1294" locator="206:37-206:42" name="repeat" xsi:type="OperandRef"/>
                        </source>
                     </operand>
                     <operand localId="1299" xsi:type="ToDecimal">
                        <signature localId="1300" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1297" locator="206:59" valueType="t:Integer" value="1" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </operand>
               <operand localId="1303" locator="206:65-206:93" xsi:type="Equal">
                  <signature localId="1308" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="1309" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1306" locator="206:65-206:87" path="value" xsi:type="Property">
                     <source localId="1305" locator="206:65-206:81" path="periodUnit" xsi:type="Property">
                        <source localId="1304" locator="206:65-206:70" name="repeat" xsi:type="OperandRef"/>
                     </source>
                  </operand>
                  <operand localId="1307" locator="206:91-206:93" valueType="t:String" value="a" xsi:type="Literal"/>
               </operand>
            </condition>
            <then localId="1310" locator="207:8-207:11" valueType="t:Boolean" value="true" xsi:type="Literal"/>
            <else localId="1311" locator="207:18-207:22" valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
         <operand localId="680" name="repeat">
            <operandTypeSpecifier localId="679" locator="205:41-205:146" xsi:type="ChoiceTypeSpecifier">
               <choice localId="671" locator="205:48-205:65" name="fhir:Timing.Repeat" xsi:type="NamedTypeSpecifier"/>
               <choice localId="672" locator="205:68-205:145" xsi:type="TupleTypeSpecifier">
                  <element localId="673" locator="205:74-205:97" name="frequency">
                     <elementType localId="674" locator="205:84-205:97" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="675" locator="205:99-205:119" name="period">
                     <elementType localId="676" locator="205:106-205:119" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="677" locator="205:121-205:144" name="periodUnit">
                     <elementType localId="678" locator="205:132-205:144" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </element>
               </choice>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="712" locator="242:1-248:13" name="EvaluateFlagAnnual" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="712">
               <a:s>define function EvaluateFlagAnnual(nextDueDate DateTime):
  </a:s>
               <a:s r="1413">
                  <a:s r="1413">
                     <a:s>if </a:s>
                     <a:s r="1414">
                        <a:s r="1415">
                           <a:s>nextDueDate</a:s>
                        </a:s>
                        <a:s> &lt; </a:s>
                        <a:s r="1416">
                           <a:s>(</a:s>
                           <a:s r="1416">
                              <a:s r="1419">
                                 <a:s>Today()</a:s>
                              </a:s>
                              <a:s> - </a:s>
                              <a:s r="1420">
                                 <a:s>OverdueAnnual</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                     <a:s> then
    </a:s>
                     <a:s r="1428">
                        <a:s>&quot;OVERDUE&quot;</a:s>
                     </a:s>
                     <a:s>
  else </a:s>
                     <a:s r="1429">
                        <a:s>if </a:s>
                        <a:s r="1430">
                           <a:s r="1431">
                              <a:s r="1432">
                                 <a:s>nextDueDate</a:s>
                              </a:s>
                              <a:s> &lt;= </a:s>
                              <a:s r="1433">
                                 <a:s>(</a:s>
                                 <a:s r="1433">
                                    <a:s r="1436">
                                       <a:s>Today()</a:s>
                                    </a:s>
                                    <a:s> + </a:s>
                                    <a:s r="1437">
                                       <a:s>DueAnnual</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> and </a:s>
                           <a:s r="1445">
                              <a:s r="1446">
                                 <a:s>nextDueDate</a:s>
                              </a:s>
                              <a:s> >= </a:s>
                              <a:s r="1447">
                                 <a:s>(</a:s>
                                 <a:s r="1447">
                                    <a:s r="1450">
                                       <a:s>Today()</a:s>
                                    </a:s>
                                    <a:s> - </a:s>
                                    <a:s r="1451">
                                       <a:s>OverdueAnnual</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s> then
    </a:s>
                        <a:s r="1459">
                           <a:s>&quot;DUE&quot;</a:s>
                        </a:s>
                        <a:s>
  else
    </a:s>
                        <a:s r="1460">
                           <a:s>&quot;NOT DUE&quot;</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1413" locator="243:3-248:13" xsi:type="If">
            <condition localId="1414" locator="243:6-243:44" xsi:type="Less">
               <signature localId="1426" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <signature localId="1427" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <operand localId="1415" locator="243:6-243:16" name="nextDueDate" xsi:type="OperandRef"/>
               <operand localId="1424" xsi:type="ToDateTime">
                  <signature localId="1425" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1416" locator="243:20-243:44" xsi:type="Subtract">
                     <signature localId="1421" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1422" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1419" locator="243:21-243:27" xsi:type="Today"/>
                     <operand localId="1420" locator="243:31-243:43" name="OverdueAnnual" xsi:type="ParameterRef"/>
                  </operand>
               </operand>
            </condition>
            <then localId="1428" locator="244:5-244:13" name="OVERDUE" xsi:type="CodeRef"/>
            <else localId="1429" locator="245:8-248:13" xsi:type="If">
               <condition localId="1430" locator="245:11-245:91" xsi:type="And">
                  <operand localId="1431" locator="245:11-245:46" xsi:type="LessOrEqual">
                     <signature localId="1443" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1444" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1432" locator="245:11-245:21" name="nextDueDate" xsi:type="OperandRef"/>
                     <operand localId="1441" xsi:type="ToDateTime">
                        <signature localId="1442" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1433" locator="245:26-245:46" xsi:type="Add">
                           <signature localId="1438" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1439" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1436" locator="245:27-245:33" xsi:type="Today"/>
                           <operand localId="1437" locator="245:37-245:45" name="DueAnnual" xsi:type="ParameterRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand localId="1445" locator="245:52-245:91" xsi:type="GreaterOrEqual">
                     <signature localId="1457" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1458" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1446" locator="245:52-245:62" name="nextDueDate" xsi:type="OperandRef"/>
                     <operand localId="1455" xsi:type="ToDateTime">
                        <signature localId="1456" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1447" locator="245:67-245:91" xsi:type="Subtract">
                           <signature localId="1452" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1453" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1450" locator="245:68-245:74" xsi:type="Today"/>
                           <operand localId="1451" locator="245:78-245:90" name="OverdueAnnual" xsi:type="ParameterRef"/>
                        </operand>
                     </operand>
                  </operand>
               </condition>
               <then localId="1459" locator="246:5-246:9" name="DUE" xsi:type="CodeRef"/>
               <else localId="1460" locator="248:5-248:13" name="NOT DUE" xsi:type="CodeRef"/>
            </else>
         </expression>
         <operand localId="714" name="nextDueDate">
            <operandTypeSpecifier localId="713" locator="242:48-242:55" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="766" locator="209:1-211:22" name="IntervalIsBiennial" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="766">
               <a:s>define function IntervalIsBiennial(repeat Choice&lt;FHIR.Timing.Repeat, Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}>):
  </a:s>
               <a:s r="1312">
                  <a:s r="1312">
                     <a:s>if </a:s>
                     <a:s r="1313">
                        <a:s r="1314">
                           <a:s r="1315">
                              <a:s r="1318">
                                 <a:s r="1317">
                                    <a:s r="1316">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1317">
                                       <a:s>frequency</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1318">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="1319"> = 1</a:s>
                           </a:s>
                           <a:s> and </a:s>
                           <a:s r="1322">
                              <a:s r="1325">
                                 <a:s r="1324">
                                    <a:s r="1323">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1324">
                                       <a:s>period</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1325">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="1326"> = 2</a:s>
                           </a:s>
                        </a:s>
                        <a:s> and </a:s>
                        <a:s r="1332">
                           <a:s r="1335">
                              <a:s r="1334">
                                 <a:s r="1333">
                                    <a:s>repeat</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1334">
                                    <a:s>periodUnit</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1335">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> = </a:s>
                           <a:s r="1336">
                              <a:s>'a'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s r="1339"> 
  then true else false</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1312" locator="210:3-211:22" xsi:type="If">
            <condition localId="1313" locator="210:6-210:93" xsi:type="And">
               <operand localId="1314" locator="210:6-210:59" xsi:type="And">
                  <operand localId="1315" locator="210:6-210:31" xsi:type="Equal">
                     <signature localId="1320" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1321" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1318" locator="210:6-210:27" path="value" xsi:type="Property">
                        <source localId="1317" locator="210:6-210:21" path="frequency" xsi:type="Property">
                           <source localId="1316" locator="210:6-210:11" name="repeat" xsi:type="OperandRef"/>
                        </source>
                     </operand>
                     <operand localId="1319" locator="210:31" valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </operand>
                  <operand localId="1322" locator="210:37-210:59" xsi:type="Equal">
                     <signature localId="1330" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1331" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1325" locator="210:37-210:55" path="value" xsi:type="Property">
                        <source localId="1324" locator="210:37-210:49" path="period" xsi:type="Property">
                           <source localId="1323" locator="210:37-210:42" name="repeat" xsi:type="OperandRef"/>
                        </source>
                     </operand>
                     <operand localId="1328" xsi:type="ToDecimal">
                        <signature localId="1329" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1326" locator="210:59" valueType="t:Integer" value="2" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </operand>
               <operand localId="1332" locator="210:65-210:93" xsi:type="Equal">
                  <signature localId="1337" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <signature localId="1338" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1335" locator="210:65-210:87" path="value" xsi:type="Property">
                     <source localId="1334" locator="210:65-210:81" path="periodUnit" xsi:type="Property">
                        <source localId="1333" locator="210:65-210:70" name="repeat" xsi:type="OperandRef"/>
                     </source>
                  </operand>
                  <operand localId="1336" locator="210:91-210:93" valueType="t:String" value="a" xsi:type="Literal"/>
               </operand>
            </condition>
            <then localId="1339" locator="211:8-211:11" valueType="t:Boolean" value="true" xsi:type="Literal"/>
            <else localId="1340" locator="211:18-211:22" valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
         <operand localId="776" name="repeat">
            <operandTypeSpecifier localId="775" locator="209:43-209:148" xsi:type="ChoiceTypeSpecifier">
               <choice localId="767" locator="209:50-209:67" name="fhir:Timing.Repeat" xsi:type="NamedTypeSpecifier"/>
               <choice localId="768" locator="209:70-209:147" xsi:type="TupleTypeSpecifier">
                  <element localId="769" locator="209:76-209:99" name="frequency">
                     <elementType localId="770" locator="209:86-209:99" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="771" locator="209:101-209:121" name="period">
                     <elementType localId="772" locator="209:108-209:121" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="773" locator="209:123-209:146" name="periodUnit">
                     <elementType localId="774" locator="209:134-209:146" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </element>
               </choice>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="808" locator="239:1-240:34" name="EvaluateFlagBiennial" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="808">
               <a:s>define function EvaluateFlagBiennial(nextDueDate DateTime):
  </a:s>
               <a:s r="1412">
                  <a:s r="1412">
                     <a:s>EvaluateFlagDefault(</a:s>
                     <a:s r="1411">
                        <a:s>nextDueDate</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1412" locator="240:3-240:34" name="EvaluateFlagDefault" xsi:type="FunctionRef">
            <operand localId="1411" locator="240:23-240:33" name="nextDueDate" xsi:type="OperandRef"/>
         </expression>
         <operand localId="810" name="nextDueDate">
            <operandTypeSpecifier localId="809" locator="239:50-239:57" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="813" locator="231:1-237:13" name="EvaluateFlagDefault" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="813">
               <a:s>define function EvaluateFlagDefault(nextDueDate DateTime):
  </a:s>
               <a:s r="1363">
                  <a:s r="1363">
                     <a:s>if </a:s>
                     <a:s r="1364">
                        <a:s r="1365">
                           <a:s>nextDueDate</a:s>
                        </a:s>
                        <a:s> &lt; </a:s>
                        <a:s r="1366">
                           <a:s r="1369">
                              <a:s>Today()</a:s>
                           </a:s>
                           <a:s> - </a:s>
                           <a:s r="1370">
                              <a:s>(</a:s>
                              <a:s r="1370">
                                 <a:s>OverdueDefault</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> then
    </a:s>
                     <a:s r="1378">
                        <a:s>&quot;OVERDUE&quot;</a:s>
                     </a:s>
                     <a:s>
  else </a:s>
                     <a:s r="1379">
                        <a:s>if </a:s>
                        <a:s r="1380">
                           <a:s r="1381">
                              <a:s r="1382">
                                 <a:s>nextDueDate</a:s>
                              </a:s>
                              <a:s> &lt;= </a:s>
                              <a:s r="1383">
                                 <a:s r="1386">
                                    <a:s>Today()</a:s>
                                 </a:s>
                                 <a:s> + </a:s>
                                 <a:s r="1387">
                                    <a:s>(</a:s>
                                    <a:s r="1387">
                                       <a:s>DueDefault</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s> and </a:s>
                           <a:s r="1395">
                              <a:s r="1396">
                                 <a:s>nextDueDate</a:s>
                              </a:s>
                              <a:s> >= </a:s>
                              <a:s r="1397">
                                 <a:s r="1400">
                                    <a:s>Today()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="1401">
                                    <a:s>(</a:s>
                                    <a:s r="1401">
                                       <a:s>OverdueDefault</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s> then
    </a:s>
                        <a:s r="1409">
                           <a:s>&quot;DUE&quot;</a:s>
                        </a:s>
                        <a:s>
  else
    </a:s>
                        <a:s r="1410">
                           <a:s>&quot;NOT DUE&quot;</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1363" locator="232:3-237:13" xsi:type="If">
            <condition localId="1364" locator="232:6-232:45" xsi:type="Less">
               <signature localId="1376" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <signature localId="1377" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <operand localId="1365" locator="232:6-232:16" name="nextDueDate" xsi:type="OperandRef"/>
               <operand localId="1374" xsi:type="ToDateTime">
                  <signature localId="1375" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1366" locator="232:20-232:45" xsi:type="Subtract">
                     <signature localId="1371" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1372" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1369" locator="232:20-232:26" xsi:type="Today"/>
                     <operand localId="1370" locator="232:30-232:45" name="OverdueDefault" xsi:type="ParameterRef"/>
                  </operand>
               </operand>
            </condition>
            <then localId="1378" locator="233:5-233:13" name="OVERDUE" xsi:type="CodeRef"/>
            <else localId="1379" locator="234:8-237:13" xsi:type="If">
               <condition localId="1380" locator="234:11-234:93" xsi:type="And">
                  <operand localId="1381" locator="234:11-234:47" xsi:type="LessOrEqual">
                     <signature localId="1393" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1394" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1382" locator="234:11-234:21" name="nextDueDate" xsi:type="OperandRef"/>
                     <operand localId="1391" xsi:type="ToDateTime">
                        <signature localId="1392" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1383" locator="234:26-234:47" xsi:type="Add">
                           <signature localId="1388" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1389" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1386" locator="234:26-234:32" xsi:type="Today"/>
                           <operand localId="1387" locator="234:36-234:47" name="DueDefault" xsi:type="ParameterRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand localId="1395" locator="234:53-234:93" xsi:type="GreaterOrEqual">
                     <signature localId="1407" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1408" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1396" locator="234:53-234:63" name="nextDueDate" xsi:type="OperandRef"/>
                     <operand localId="1405" xsi:type="ToDateTime">
                        <signature localId="1406" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1397" locator="234:68-234:93" xsi:type="Subtract">
                           <signature localId="1402" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1403" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1400" locator="234:68-234:74" xsi:type="Today"/>
                           <operand localId="1401" locator="234:78-234:93" name="OverdueDefault" xsi:type="ParameterRef"/>
                        </operand>
                     </operand>
                  </operand>
               </condition>
               <then localId="1409" locator="235:5-235:9" name="DUE" xsi:type="CodeRef"/>
               <else localId="1410" locator="237:5-237:13" name="NOT DUE" xsi:type="CodeRef"/>
            </else>
         </expression>
         <operand localId="815" name="nextDueDate">
            <operandTypeSpecifier localId="814" locator="231:49-231:56" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="890" locator="97:1-119:3" name="SetFollowupRecommendation" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="890">
               <a:s>define function SetFollowupRecommendation(          
    code System.Code,
    reason System.Code,
    documentation Tuple{label System.String},
    event System.DateTime)
    returns Tuple {code System.Code,reason System.Code,documentation Tuple{label System.String},
      timingTiming Tuple{event List&lt;System.String>},
      flag System.Code
    }: 
  </a:s>
               <a:s r="991">
                  <a:s r="991">
                     <a:s>
                        <a:s r="917">
                           <a:s r="918">
                              <a:s>
                                 <a:s>code</a:s>
                              </a:s>
                           </a:s>
                           <a:s> C</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  </a:s>
                     <a:s>
                        <a:s>let </a:s>
                        <a:s r="919">
                           <a:s>nextdue: </a:s>
                           <a:s r="920">
                              <a:s>event</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
  </a:s>
                        <a:s r="921">
                           <a:s>timingTiming: </a:s>
                           <a:s r="922">
                              <a:s>{
      </a:s>
                              <a:s>
                                 <a:s>event: </a:s>
                                 <a:s r="923">
                                    <a:s>{</a:s>
                                    <a:s r="928">
                                       <a:s>ToString(</a:s>
                                       <a:s r="924">
                                          <a:s>nextdue</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>}</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
    }</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
  </a:s>
                        <a:s r="930">
                           <a:s>flag: </a:s>
                           <a:s r="935">
                              <a:s>EvaluateFollowupFlag(</a:s>
                              <a:s r="931">
                                 <a:s>nextdue</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>    
  </a:s>
                     <a:s r="984">
                        <a:s>return      
  </a:s>
                        <a:s r="985">
                           <a:s>Tuple {
    </a:s>
                           <a:s>
                              <a:s>code: </a:s>
                              <a:s r="986">
                                 <a:s>C</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>reason: </a:s>
                              <a:s r="987">
                                 <a:s>reason</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>documentation: </a:s>
                              <a:s r="988">
                                 <a:s>documentation</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>timingTiming: </a:s>
                              <a:s r="989">
                                 <a:s>timingTiming</a:s>
                              </a:s>
                           </a:s>
                           <a:s>,
    </a:s>
                           <a:s>
                              <a:s>flag: </a:s>
                              <a:s r="990">
                                 <a:s>flag</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
  }</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="991" locator="106:3-119:3" xsi:type="Query">
            <source localId="917" locator="106:3-106:8" alias="C">
               <expression localId="918" locator="106:3-106:6" name="code" xsi:type="OperandRef"/>
            </source>
            <let localId="919" locator="107:7-107:20" identifier="nextdue">
               <expression localId="920" locator="107:16-107:20" name="event" xsi:type="OperandRef"/>
            </let>
            <let localId="921" locator="108:3-110:5" identifier="timingTiming">
               <expression localId="922" locator="108:17-110:5" xsi:type="Tuple">
                  <element name="event">
                     <value localId="923" locator="109:14-109:32" xsi:type="List">
                        <element localId="928" locator="109:15-109:31" xsi:type="ToString">
                           <signature localId="929" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="924" locator="109:24-109:30" name="nextdue" xsi:type="QueryLetRef"/>
                        </element>
                     </value>
                  </element>
               </expression>
            </let>
            <let localId="930" locator="111:3-111:37" identifier="flag">
               <expression localId="935" locator="111:9-111:37" name="EvaluateFollowupFlag" xsi:type="FunctionRef">
                  <operand localId="931" locator="111:30-111:36" name="nextdue" xsi:type="QueryLetRef"/>
               </expression>
            </let>
            <return localId="984" locator="112:3-119:3">
               <expression localId="985" locator="113:3-119:3" xsi:type="Tuple">
                  <element name="code">
                     <value localId="986" locator="114:11" name="C" xsi:type="AliasRef"/>
                  </element>
                  <element name="reason">
                     <value localId="987" locator="115:13-115:18" name="reason" xsi:type="OperandRef"/>
                  </element>
                  <element name="documentation">
                     <value localId="988" locator="116:20-116:32" name="documentation" xsi:type="OperandRef"/>
                  </element>
                  <element name="timingTiming">
                     <value localId="989" locator="117:19-117:30" name="timingTiming" xsi:type="QueryLetRef"/>
                  </element>
                  <element name="flag">
                     <value localId="990" locator="118:11-118:14" name="flag" xsi:type="QueryLetRef"/>
                  </element>
               </expression>
            </return>
         </expression>
         <operand localId="892" name="code">
            <operandTypeSpecifier localId="891" locator="98:10-98:20" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="894" name="reason">
            <operandTypeSpecifier localId="893" locator="99:12-99:22" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="898" name="documentation">
            <operandTypeSpecifier localId="895" locator="100:19-100:44" xsi:type="TupleTypeSpecifier">
               <element localId="896" locator="100:25-100:43" name="label">
                  <elementType localId="897" locator="100:31-100:43" name="t:String" xsi:type="NamedTypeSpecifier"/>
               </element>
            </operandTypeSpecifier>
         </operand>
         <operand localId="900" name="event">
            <operandTypeSpecifier localId="899" locator="101:11-101:25" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="932" locator="250:1-256:13" name="EvaluateFollowupFlag" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="932">
               <a:s>define function EvaluateFollowupFlag(nextDueDate DateTime):
  </a:s>
               <a:s r="1461">
                  <a:s r="1461">
                     <a:s>if </a:s>
                     <a:s r="1462">
                        <a:s r="1463">
                           <a:s>nextDueDate</a:s>
                        </a:s>
                        <a:s> &lt; </a:s>
                        <a:s r="1464">
                           <a:s r="1467">
                              <a:s>Today()</a:s>
                           </a:s>
                           <a:s> - </a:s>
                           <a:s r="1468">
                              <a:s>(</a:s>
                              <a:s r="1468">
                                 <a:s>OverdueFollowup</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> then
    </a:s>
                     <a:s r="1476">
                        <a:s>&quot;OVERDUE&quot;</a:s>
                     </a:s>
                     <a:s>
  else </a:s>
                     <a:s r="1477">
                        <a:s>if </a:s>
                        <a:s r="1478">
                           <a:s r="1479">
                              <a:s r="1480">
                                 <a:s>nextDueDate</a:s>
                              </a:s>
                              <a:s> &lt;= </a:s>
                              <a:s r="1481">
                                 <a:s r="1484">
                                    <a:s>Today()</a:s>
                                 </a:s>
                                 <a:s> + </a:s>
                                 <a:s r="1485">
                                    <a:s>(</a:s>
                                    <a:s r="1485">
                                       <a:s>DueDefault</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s> and </a:s>
                           <a:s r="1493">
                              <a:s r="1494">
                                 <a:s>nextDueDate</a:s>
                              </a:s>
                              <a:s> >= </a:s>
                              <a:s r="1495">
                                 <a:s r="1498">
                                    <a:s>Today()</a:s>
                                 </a:s>
                                 <a:s> - </a:s>
                                 <a:s r="1499">
                                    <a:s>(</a:s>
                                    <a:s r="1499">
                                       <a:s>OverdueFollowup</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s> then
    </a:s>
                        <a:s r="1507">
                           <a:s>&quot;DUE&quot;</a:s>
                        </a:s>
                        <a:s>
  else
    </a:s>
                        <a:s r="1508">
                           <a:s>&quot;NOT DUE&quot;</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1461" locator="251:3-256:13" xsi:type="If">
            <condition localId="1462" locator="251:6-251:46" xsi:type="Less">
               <signature localId="1474" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <signature localId="1475" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               <operand localId="1463" locator="251:6-251:16" name="nextDueDate" xsi:type="OperandRef"/>
               <operand localId="1472" xsi:type="ToDateTime">
                  <signature localId="1473" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1464" locator="251:20-251:46" xsi:type="Subtract">
                     <signature localId="1469" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1470" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1467" locator="251:20-251:26" xsi:type="Today"/>
                     <operand localId="1468" locator="251:30-251:46" name="OverdueFollowup" xsi:type="ParameterRef"/>
                  </operand>
               </operand>
            </condition>
            <then localId="1476" locator="252:5-252:13" name="OVERDUE" xsi:type="CodeRef"/>
            <else localId="1477" locator="253:8-256:13" xsi:type="If">
               <condition localId="1478" locator="253:11-253:94" xsi:type="And">
                  <operand localId="1479" locator="253:11-253:47" xsi:type="LessOrEqual">
                     <signature localId="1491" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1492" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1480" locator="253:11-253:21" name="nextDueDate" xsi:type="OperandRef"/>
                     <operand localId="1489" xsi:type="ToDateTime">
                        <signature localId="1490" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1481" locator="253:26-253:47" xsi:type="Add">
                           <signature localId="1486" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1487" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1484" locator="253:26-253:32" xsi:type="Today"/>
                           <operand localId="1485" locator="253:36-253:47" name="DueDefault" xsi:type="ParameterRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand localId="1493" locator="253:53-253:94" xsi:type="GreaterOrEqual">
                     <signature localId="1505" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <signature localId="1506" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <operand localId="1494" locator="253:53-253:63" name="nextDueDate" xsi:type="OperandRef"/>
                     <operand localId="1503" xsi:type="ToDateTime">
                        <signature localId="1504" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1495" locator="253:68-253:94" xsi:type="Subtract">
                           <signature localId="1500" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1501" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1498" locator="253:68-253:74" xsi:type="Today"/>
                           <operand localId="1499" locator="253:78-253:94" name="OverdueFollowup" xsi:type="ParameterRef"/>
                        </operand>
                     </operand>
                  </operand>
               </condition>
               <then localId="1507" locator="254:5-254:9" name="DUE" xsi:type="CodeRef"/>
               <else localId="1508" locator="256:5-256:13" name="NOT DUE" xsi:type="CodeRef"/>
            </else>
         </expression>
         <operand localId="934" name="nextDueDate">
            <operandTypeSpecifier localId="933" locator="250:50-250:57" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1186" locator="177:1-178:76" name="MostRecentDiagnosticReportByVS" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1186">
               <a:s>define function MostRecentDiagnosticReportByVS(vs System.ValueSet):
    </a:s>
               <a:s r="1204">
                  <a:s r="1204">
                     <a:s r="1189">
                        <a:s>CSMCommonFunctions</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1204">
                        <a:s>MostRecentDiagnosticReport(</a:s>
                        <a:s r="1194">
                           <a:s>DiagnosticReportsByVS(</a:s>
                           <a:s r="1190">
                              <a:s>vs</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1204" locator="178:5-178:76" name="MostRecentDiagnosticReport" libraryName="CSMCommonFunctions" xsi:type="FunctionRef">
            <operand localId="1194" locator="178:51-178:75" name="DiagnosticReportsByVS" xsi:type="FunctionRef">
               <operand localId="1190" locator="178:73-178:74" name="vs" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand localId="1188" name="vs">
            <operandTypeSpecifier localId="1187" locator="177:51-177:65" name="t:ValueSet" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1191" locator="180:1-181:26" name="DiagnosticReportsByVS" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1191">
               <a:s>define function DiagnosticReportsByVS(vs System.ValueSet):
  </a:s>
               <a:s r="1213">
                  <a:s r="1213">
                     <a:s>
                        <a:s r="1205">
                           <a:s r="1208">
                              <a:s r="1208">
                                 <a:s>[DiagnosticReport: </a:s>
                                 <a:s>
                                    <a:s>vs</a:s>
                                 </a:s>
                                 <a:s>]</a:s>
                              </a:s>
                           </a:s>
                           <a:s> R</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1213" locator="181:3-181:26" xsi:type="Query">
            <source localId="1205" locator="181:3-181:26" alias="R">
               <expression localId="1208" locator="181:3-181:24" dataType="fhir:DiagnosticReport" templateId="http://hl7.org/fhir/StructureDefinition/DiagnosticReport" codeProperty="code" codeComparator="in" xsi:type="Retrieve"/>
            </source>
         </expression>
         <operand localId="1193" name="vs">
            <operandTypeSpecifier localId="1192" locator="180:42-180:56" name="t:ValueSet" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1238" locator="194:1-203:5" name="EvaluateInterval" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1238">
               <a:s>//------------------------------------------------------------------------------
// scheduled frequency
//------------------------------------------------------------------------------

define function EvaluateInterval(repeat Choice&lt;FHIR.Timing.Repeat, Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}>):
  </a:s>
               <a:s r="1249">
                  <a:s r="1249">
                     <a:s>case
    </a:s>
                     <a:s r="1250">
                        <a:s>when </a:s>
                        <a:s r="1263">
                           <a:s>IntervalIsUnknown(</a:s>
                           <a:s r="1251">
                              <a:s>repeat</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>
      then </a:s>
                        <a:s r="1273">
                           <a:s>'Unknown'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1274">
                        <a:s>when </a:s>
                        <a:s r="1276">
                           <a:s>IntervalIsAnnual(</a:s>
                           <a:s r="1275">
                              <a:s>repeat</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>
      then </a:s>
                        <a:s r="1277">
                           <a:s>'Annual'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1278">
                        <a:s>when </a:s>
                        <a:s r="1280">
                           <a:s>IntervalIsBiennial(</a:s>
                           <a:s r="1279">
                              <a:s>repeat</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>
      then </a:s>
                        <a:s r="1281">
                           <a:s>'Biennial'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    else </a:s>
                     <a:s r="1282">
                        <a:s>'Other'</a:s>
                     </a:s>
                     <a:s>
  end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1249" locator="195:3-203:5" xsi:type="Case">
            <caseItem localId="1250" locator="196:5-197:20">
               <when localId="1263" locator="196:10-196:34" name="IntervalIsUnknown" xsi:type="FunctionRef">
                  <operand localId="1251" locator="196:28-196:33" name="repeat" xsi:type="OperandRef"/>
               </when>
               <then localId="1273" locator="197:12-197:20" valueType="t:String" value="Unknown" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="1274" locator="198:5-199:19">
               <when localId="1276" locator="198:10-198:33" name="IntervalIsAnnual" xsi:type="FunctionRef">
                  <operand localId="1275" locator="198:27-198:32" name="repeat" xsi:type="OperandRef"/>
               </when>
               <then localId="1277" locator="199:12-199:19" valueType="t:String" value="Annual" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="1278" locator="200:5-201:21">
               <when localId="1280" locator="200:10-200:35" name="IntervalIsBiennial" xsi:type="FunctionRef">
                  <operand localId="1279" locator="200:29-200:34" name="repeat" xsi:type="OperandRef"/>
               </when>
               <then localId="1281" locator="201:12-201:21" valueType="t:String" value="Biennial" xsi:type="Literal"/>
            </caseItem>
            <else localId="1282" locator="202:10-202:16" valueType="t:String" value="Other" xsi:type="Literal"/>
         </expression>
         <operand localId="1248" name="repeat">
            <operandTypeSpecifier localId="1247" locator="194:41-194:146" xsi:type="ChoiceTypeSpecifier">
               <choice localId="1239" locator="194:48-194:65" name="fhir:Timing.Repeat" xsi:type="NamedTypeSpecifier"/>
               <choice localId="1240" locator="194:68-194:145" xsi:type="TupleTypeSpecifier">
                  <element localId="1241" locator="194:74-194:97" name="frequency">
                     <elementType localId="1242" locator="194:84-194:97" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="1243" locator="194:99-194:119" name="period">
                     <elementType localId="1244" locator="194:106-194:119" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="1245" locator="194:121-194:144" name="periodUnit">
                     <elementType localId="1246" locator="194:132-194:144" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </element>
               </choice>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1252" locator="213:2-215:22" name="IntervalIsUnknown" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1252">
               <a:s>define function IntervalIsUnknown(repeat Choice&lt;FHIR.Timing.Repeat, Tuple{frequency System.Integer,period System.Decimal,periodUnit System.String}>):
  </a:s>
               <a:s r="1341">
                  <a:s r="1341">
                     <a:s>if </a:s>
                     <a:s r="1342">
                        <a:s r="1344">
                           <a:s r="1343">
                              <a:s>repeat</a:s>
                           </a:s>
                           <a:s> is null</a:s>
                        </a:s>
                        <a:s> or </a:s>
                        <a:s r="1347">
                           <a:s r="1346">
                              <a:s r="1345">
                                 <a:s>repeat</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1346">
                                 <a:s>frequency</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is null</a:s>
                        </a:s>
                     </a:s>
                     <a:s r="1348">
  then true else false</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1341" locator="214:3-215:22" xsi:type="If">
            <condition localId="1342" locator="214:6-214:47" xsi:type="Or">
               <operand localId="1344" locator="214:6-214:19" xsi:type="IsNull">
                  <operand localId="1343" locator="214:6-214:11" name="repeat" xsi:type="OperandRef"/>
               </operand>
               <operand localId="1347" locator="214:24-214:47" xsi:type="IsNull">
                  <operand localId="1346" locator="214:24-214:39" path="frequency" xsi:type="Property">
                     <source localId="1345" locator="214:24-214:29" name="repeat" xsi:type="OperandRef"/>
                  </operand>
               </operand>
            </condition>
            <then localId="1348" locator="215:8-215:11" valueType="t:Boolean" value="true" xsi:type="Literal"/>
            <else localId="1349" locator="215:18-215:22" valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
         <operand localId="1262" name="repeat">
            <operandTypeSpecifier localId="1261" locator="213:43-213:148" xsi:type="ChoiceTypeSpecifier">
               <choice localId="1253" locator="213:50-213:67" name="fhir:Timing.Repeat" xsi:type="NamedTypeSpecifier"/>
               <choice localId="1254" locator="213:70-213:147" xsi:type="TupleTypeSpecifier">
                  <element localId="1255" locator="213:76-213:99" name="frequency">
                     <elementType localId="1256" locator="213:86-213:99" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="1257" locator="213:101-213:121" name="period">
                     <elementType localId="1258" locator="213:108-213:121" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="1259" locator="213:123-213:146" name="periodUnit">
                     <elementType localId="1260" locator="213:134-213:146" name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </element>
               </choice>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1509" locator="261:1-267:3" name="CreateExtension" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1509">
               <a:s>//------------------------------------------------------------------------------
// Create extension
//------------------------------------------------------------------------------
define function CreateExtension(url String, coding Code):
  </a:s>
               <a:s r="1514">
                  <a:s r="1514">
                     <a:s>{    
    </a:s>
                     <a:s>
                        <a:s>url: </a:s>
                        <a:s r="1515">
                           <a:s>url</a:s>
                        </a:s>
                     </a:s>
                     <a:s>,
    </a:s>
                     <a:s>
                        <a:s>valueCodeableConcept: </a:s>
                        <a:s r="1516">
                           <a:s>{
      </a:s>
                           <a:s>
                              <a:s>coding: </a:s>
                              <a:s r="1517">
                                 <a:s>{ </a:s>
                                 <a:s r="1518">
                                    <a:s>coding</a:s>
                                 </a:s>
                                 <a:s> }</a:s>
                              </a:s>
                           </a:s>
                           <a:s>
    }</a:s>
                        </a:s>
                     </a:s>
                     <a:s> 
  }</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1514" locator="262:3-267:3" xsi:type="Tuple">
            <element name="url">
               <value localId="1515" locator="263:10-263:12" name="url" xsi:type="OperandRef"/>
            </element>
            <element name="valueCodeableConcept">
               <value localId="1516" locator="264:27-266:5" xsi:type="Tuple">
                  <element name="coding">
                     <value localId="1517" locator="265:15-265:24" xsi:type="List">
                        <element localId="1518" locator="265:17-265:22" name="coding" xsi:type="OperandRef"/>
                     </value>
                  </element>
               </value>
            </element>
         </expression>
         <operand localId="1511" name="url">
            <operandTypeSpecifier localId="1510" locator="261:37-261:42" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="1513" name="coding">
            <operandTypeSpecifier localId="1512" locator="261:52-261:55" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1519" locator="269:1-275:4" name="CreateRecommendationFlagExtension" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1519">
               <a:s>define function CreateRecommendationFlagExtension(coding Code):
  </a:s>
               <a:s r="1522">
                  <a:s r="1522">
                     <a:s>{</a:s>
                     <a:s r="1523">
                        <a:s>{    
    </a:s>
                        <a:s>
                           <a:s>url: </a:s>
                           <a:s r="1524">
                              <a:s>'http://cancerscreeningcds.github.io/bcsm-cds/StructureDefinition/csm-recommendation-flag'</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
    </a:s>
                        <a:s>
                           <a:s>valueCodeableConcept: </a:s>
                           <a:s r="1525">
                              <a:s>{
      </a:s>
                              <a:s>
                                 <a:s>coding: </a:s>
                                 <a:s r="1526">
                                    <a:s>{ </a:s>
                                    <a:s r="1527">
                                       <a:s>coding</a:s>
                                    </a:s>
                                    <a:s> }</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
    }</a:s>
                           </a:s>
                        </a:s>
                        <a:s> 
  }</a:s>
                     </a:s>
                     <a:s>}</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1522" locator="270:3-275:4" xsi:type="List">
            <element localId="1523" locator="270:4-275:3" xsi:type="Tuple">
               <element name="url">
                  <value localId="1524" locator="271:10-271:99" valueType="t:String" value="http://cancerscreeningcds.github.io/bcsm-cds/StructureDefinition/csm-recommendation-flag" xsi:type="Literal"/>
               </element>
               <element name="valueCodeableConcept">
                  <value localId="1525" locator="272:27-274:5" xsi:type="Tuple">
                     <element name="coding">
                        <value localId="1526" locator="273:15-273:24" xsi:type="List">
                           <element localId="1527" locator="273:17-273:22" name="coding" xsi:type="OperandRef"/>
                        </value>
                     </element>
                  </value>
               </element>
            </element>
         </expression>
         <operand localId="1521" name="coding">
            <operandTypeSpecifier localId="1520" locator="269:58-269:61" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1528" locator="281:1-291:3" name="AggregateRecommendationsByCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1528">
               <a:s>//------------------------------------------------------------------------------
// Group recommendations
//------------------------------------------------------------------------------

define function AggregateRecommendationsByCode(recommendations List&lt;Choice&lt;Tuple{code Code,reason Code}, 
  Tuple{code System.Code,reason System.Code,timingAge Tuple{value Decimal, code String},
    timingTiming Tuple{event List&lt;String>,repeat Tuple{boundsPeriod Tuple{start System.String},frequency System.Integer,period System.Integer,periodUnit System.String}}}>>)
  returns List&lt;Tuple{code Code, value List&lt;Any>}>:
  // For each unique code, create a  Tuple with the code and the List of associated values
  </a:s>
               <a:s r="1572">
                  <a:s r="1572">
                     <a:s>distinct</a:s>
                     <a:s r="1596">
                        <a:s>
                           <a:s r="1573">
                              <a:s r="1582">
                                 <a:s>(</a:s>
                                 <a:s r="1582">
                                    <a:s r="1574">
                                       <a:s>recommendations</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1582">
                                       <a:s>code</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s> actCode</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
  </a:s>
                        <a:s r="1584">
                           <a:s>return
  </a:s>
                           <a:s r="1585">
                              <a:s>{
    </a:s>
                              <a:s>
                                 <a:s>code: </a:s>
                                 <a:s r="1586">
                                    <a:s>actCode</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
    </a:s>
                              <a:s>
                                 <a:s>value: </a:s>
                                 <a:s r="1595">
                                    <a:s>
                                       <a:s r="1587">
                                          <a:s r="1588">
                                             <a:s>
                                                <a:s>recommendations</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> R</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> </a:s>
                                    <a:s r="1589">
                                       <a:s>where </a:s>
                                       <a:s r="1589">
                                          <a:s r="1591">
                                             <a:s r="1590">
                                                <a:s>R</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="1591">
                                                <a:s>code</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> ~ </a:s>
                                          <a:s r="1592">
                                             <a:s>actCode</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
  }</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1572" locator="286:3-291:3" xsi:type="Distinct">
            <operand localId="1596" locator="286:11-291:3" xsi:type="Query">
               <source localId="1573" locator="286:11-286:40" alias="actCode">
                  <expression localId="1582" locator="286:11-286:32" xsi:type="Query">
                     <source localId="1581" alias="$this">
                        <expression localId="1574" locator="286:12-286:26" name="recommendations" xsi:type="OperandRef"/>
                     </source>
                     <where localId="1578" xsi:type="Not">
                        <operand localId="1577" xsi:type="IsNull">
                           <operand localId="1576" path="code" xsi:type="Property">
                              <source localId="1575" name="$this" xsi:type="AliasRef"/>
                           </operand>
                        </operand>
                     </where>
                     <return localId="1583" distinct="false">
                        <expression localId="1580" path="code" xsi:type="Property">
                           <source localId="1579" name="$this" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </expression>
               </source>
               <return localId="1584" locator="287:3-291:3">
                  <expression localId="1585" locator="288:3-291:3" xsi:type="Tuple">
                     <element name="code">
                        <value localId="1586" locator="289:11-289:17" name="actCode" xsi:type="AliasRef"/>
                     </element>
                     <element name="value">
                        <value localId="1595" locator="290:12-290:51" xsi:type="Query">
                           <source localId="1587" locator="290:12-290:28" alias="R">
                              <expression localId="1588" locator="290:12-290:26" name="recommendations" xsi:type="OperandRef"/>
                           </source>
                           <where localId="1589" locator="290:30-290:51" xsi:type="Equivalent">
                              <signature localId="1593" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                              <signature localId="1594" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                              <operand localId="1591" locator="290:36-290:41" path="code" scope="R" xsi:type="Property"/>
                              <operand localId="1592" locator="290:45-290:51" name="actCode" xsi:type="AliasRef"/>
                           </where>
                        </value>
                     </element>
                  </expression>
               </return>
            </operand>
         </expression>
         <operand localId="1564" name="recommendations">
            <operandTypeSpecifier localId="1529" locator="281:64-283:171" xsi:type="ListTypeSpecifier">
               <elementType localId="1563" locator="281:69-283:170" xsi:type="ChoiceTypeSpecifier">
                  <choice localId="1530" locator="281:76-281:103" xsi:type="TupleTypeSpecifier">
                     <element localId="1531" locator="281:82-281:90" name="code">
                        <elementType localId="1532" locator="281:87-281:90" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                     </element>
                     <element localId="1533" locator="281:92-281:102" name="reason">
                        <elementType localId="1534" locator="281:99-281:102" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                     </element>
                  </choice>
                  <choice localId="1535" locator="282:3-283:169" xsi:type="TupleTypeSpecifier">
                     <element localId="1536" locator="282:9-282:24" name="code">
                        <elementType localId="1537" locator="282:14-282:24" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                     </element>
                     <element localId="1538" locator="282:26-282:43" name="reason">
                        <elementType localId="1539" locator="282:33-282:43" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                     </element>
                     <element localId="1540" locator="282:45-282:87" name="timingAge">
                        <elementType localId="1541" locator="282:55-282:87" xsi:type="TupleTypeSpecifier">
                           <element localId="1542" locator="282:61-282:73" name="value">
                              <elementType localId="1543" locator="282:67-282:73" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                           </element>
                           <element localId="1544" locator="282:76-282:86" name="code">
                              <elementType localId="1545" locator="282:81-282:86" name="t:String" xsi:type="NamedTypeSpecifier"/>
                           </element>
                        </elementType>
                     </element>
                     <element localId="1546" locator="283:5-283:168" name="timingTiming">
                        <elementType localId="1547" locator="283:18-283:168" xsi:type="TupleTypeSpecifier">
                           <element localId="1548" locator="283:24-283:41" name="event">
                              <elementType localId="1549" locator="283:30-283:41" xsi:type="ListTypeSpecifier">
                                 <elementType localId="1550" locator="283:35-283:40" name="t:String" xsi:type="NamedTypeSpecifier"/>
                              </elementType>
                           </element>
                           <element localId="1551" locator="283:43-283:167" name="repeat">
                              <elementType localId="1552" locator="283:50-283:167" xsi:type="TupleTypeSpecifier">
                                 <element localId="1553" locator="283:56-283:94" name="boundsPeriod">
                                    <elementType localId="1554" locator="283:69-283:94" xsi:type="TupleTypeSpecifier">
                                       <element localId="1555" locator="283:75-283:93" name="start">
                                          <elementType localId="1556" locator="283:81-283:93" name="t:String" xsi:type="NamedTypeSpecifier"/>
                                       </element>
                                    </elementType>
                                 </element>
                                 <element localId="1557" locator="283:96-283:119" name="frequency">
                                    <elementType localId="1558" locator="283:106-283:119" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                                 </element>
                                 <element localId="1559" locator="283:121-283:141" name="period">
                                    <elementType localId="1560" locator="283:128-283:141" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                                 </element>
                                 <element localId="1561" locator="283:143-283:166" name="periodUnit">
                                    <elementType localId="1562" locator="283:154-283:166" name="t:String" xsi:type="NamedTypeSpecifier"/>
                                 </element>
                              </elementType>
                           </element>
                        </elementType>
                     </element>
                  </choice>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1597" locator="303:1-307:37" name="CollateConclusionCodes" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1597">
               <a:s>//------------------------------------------------------------------------------
// Diagnostic report results
//------------------------------------------------------------------------------
// Aggregate result codes -
//  DiagnosticReport.conclusionCode[]
//  Observatio.value where DiagnosticReport.result[].reference = Observation
//  Observatio.value where Observation.basedOn = DiagnosticReport.basedOn (request)

// if a DiagnosticReport.code has target code, then call original CollateConclusionCodes
// if a DiagnosticReport.code does not have target code, then return values from matched Observations
define function CollateConclusionCodes(D DiagnosticReport, ObsList List&lt;Observation>, code System.Code):
  </a:s>
               <a:s r="1605">
                  <a:s r="1605">
                     <a:s>if </a:s>
                     <a:s r="1606">
                        <a:s r="1610">
                           <a:s r="1607">
                              <a:s>FHIRHelpers</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="1610">
                              <a:s>ToConcept(</a:s>
                              <a:s r="1609">
                                 <a:s r="1608">
                                    <a:s>D</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1609">
                                    <a:s>code</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s> ~ </a:s>
                        <a:s r="1611">
                           <a:s>code</a:s>
                        </a:s>
                     </a:s>
                     <a:s> then
    </a:s>
                     <a:s r="1625">
                        <a:s>CollateConclusionCodes(</a:s>
                        <a:s r="1617">
                           <a:s>D</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="1618">
                           <a:s>ObsList</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>
  else
    </a:s>
                     <a:s r="1696">
                        <a:s>ValuesFromObservation(</a:s>
                        <a:s r="1694">
                           <a:s>D</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="1695">
                           <a:s>ObsList</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1605" locator="304:3-307:37" xsi:type="If">
            <condition localId="1606" locator="304:6-304:41" xsi:type="Equivalent">
               <signature localId="1615" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
               <signature localId="1616" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
               <operand localId="1610" locator="304:6-304:34" name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand localId="1609" locator="304:28-304:33" path="code" xsi:type="Property">
                     <source localId="1608" locator="304:28" name="D" xsi:type="OperandRef"/>
                  </operand>
               </operand>
               <operand localId="1613" xsi:type="ToConcept">
                  <signature localId="1614" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1611" locator="304:38-304:41" name="code" xsi:type="OperandRef"/>
               </operand>
            </condition>
            <then localId="1625" locator="305:5-305:38" name="CollateConclusionCodes" xsi:type="FunctionRef">
               <operand localId="1617" locator="305:28" name="D" xsi:type="OperandRef"/>
               <operand localId="1618" locator="305:31-305:37" name="ObsList" xsi:type="OperandRef"/>
            </then>
            <else localId="1696" locator="307:5-307:37" name="ValuesFromObservation" xsi:type="FunctionRef">
               <operand localId="1694" locator="307:27" name="D" xsi:type="OperandRef"/>
               <operand localId="1695" locator="307:30-307:36" name="ObsList" xsi:type="OperandRef"/>
            </else>
         </expression>
         <operand localId="1599" name="D">
            <operandTypeSpecifier localId="1598" locator="303:42-303:57" name="fhir:DiagnosticReport" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="1602" name="ObsList">
            <operandTypeSpecifier localId="1600" locator="303:68-303:84" xsi:type="ListTypeSpecifier">
               <elementType localId="1601" locator="303:73-303:83" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="1604" name="code">
            <operandTypeSpecifier localId="1603" locator="303:92-303:102" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1619" locator="309:1-311:35" name="CollateConclusionCodes" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1619">
               <a:s>define function CollateConclusionCodes(D DiagnosticReport, ObsList List&lt;Observation>):
  </a:s>
               <a:s r="1702">
                  <a:s r="1702">
                     <a:s r="1698">
                        <a:s r="1697">
                           <a:s>D</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="1698">
                           <a:s>conclusionCode</a:s>
                        </a:s>
                     </a:s>
                     <a:s> union
  </a:s>
                     <a:s r="1701">
                        <a:s>ValuesFromObservation(</a:s>
                        <a:s r="1699">
                           <a:s>D</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="1700">
                           <a:s>ObsList</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1702" locator="310:3-311:35" xsi:type="Union">
            <operand localId="1698" locator="310:3-310:18" path="conclusionCode" xsi:type="Property">
               <source localId="1697" locator="310:3" name="D" xsi:type="OperandRef"/>
            </operand>
            <operand localId="1701" locator="311:3-311:35" name="ValuesFromObservation" xsi:type="FunctionRef">
               <operand localId="1699" locator="311:25" name="D" xsi:type="OperandRef"/>
               <operand localId="1700" locator="311:28-311:34" name="ObsList" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand localId="1621" name="D">
            <operandTypeSpecifier localId="1620" locator="309:42-309:57" name="fhir:DiagnosticReport" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="1624" name="ObsList">
            <operandTypeSpecifier localId="1622" locator="309:68-309:84" xsi:type="ListTypeSpecifier">
               <elementType localId="1623" locator="309:73-309:83" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1630" locator="313:1-318:40" name="ValuesFromObservation" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1630">
               <a:s>define function ValuesFromObservation(D DiagnosticReport, ObsList List&lt;Observation>):
  </a:s>
               <a:s r="1758">
                  <a:s r="1758">
                     <a:s>
                        <a:s r="1703">
                           <a:s r="1704">
                              <a:s>(</a:s>
                              <a:s r="1704">
                                 <a:s>ObsList</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s> O</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  </a:s>
                     <a:s r="1705">
                        <a:s>where
    </a:s>
                        <a:s r="1705">
                           <a:s r="1732">
                              <a:s>Exists( </a:s>
                              <a:s r="1729">
                                 <a:s>
                                    <a:s r="1706">
                                       <a:s r="1708">
                                          <a:s>(</a:s>
                                          <a:s r="1708">
                                             <a:s r="1707">
                                                <a:s>D</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="1708">
                                                <a:s>result</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> )</a:s>
                                       </a:s>
                                       <a:s> R</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> </a:s>
                                 <a:s r="1709">
                                    <a:s>where </a:s>
                                    <a:s r="1709">
                                       <a:s r="1722">
                                          <a:s>Last(</a:s>
                                          <a:s r="1717">
                                             <a:s>Split(</a:s>
                                             <a:s r="1711">
                                                <a:s r="1710">
                                                   <a:s>R</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="1711">
                                                   <a:s>reference</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>,</a:s>
                                             <a:s r="1712">
                                                <a:s>'/'</a:s>
                                             </a:s>
                                             <a:s>)</a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s> =  </a:s>
                                       <a:s r="1724">
                                          <a:s r="1723">
                                             <a:s>O</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="1724">
                                             <a:s>id</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s> )</a:s>
                           </a:s>
                           <a:s> or
    </a:s>
                           <a:s r="1752">
                              <a:s>Exists( </a:s>
                              <a:s r="1749">
                                 <a:s>
                                    <a:s r="1733">
                                       <a:s r="1735">
                                          <a:s>(</a:s>
                                          <a:s r="1735">
                                             <a:s r="1734">
                                                <a:s>O</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="1735">
                                                <a:s>basedOn</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s> oB</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> </a:s>
                                 <a:s r="1748">
                                    <a:s>where </a:s>
                                    <a:s r="1748">
                                       <a:s>AnyTrue(</a:s>
                                       <a:s r="1745">
                                          <a:s>
                                             <a:s r="1736">
                                                <a:s r="1738">
                                                   <a:s>(</a:s>
                                                   <a:s r="1738">
                                                      <a:s r="1737">
                                                         <a:s>D</a:s>
                                                      </a:s>
                                                      <a:s>.</a:s>
                                                      <a:s r="1738">
                                                         <a:s>basedOn</a:s>
                                                      </a:s>
                                                   </a:s>
                                                   <a:s>)</a:s>
                                                </a:s>
                                                <a:s> dB</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> </a:s>
                                          <a:s r="1739">
                                             <a:s>return </a:s>
                                             <a:s r="1740">
                                                <a:s r="1741">
                                                   <a:s>dB</a:s>
                                                </a:s>
                                                <a:s> = </a:s>
                                                <a:s r="1742">
                                                   <a:s>oB</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> )</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s> )</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  </a:s>
                     <a:s r="1753">
                        <a:s>return </a:s>
                        <a:s r="1754">
                           <a:s r="1756">
                              <a:s r="1755">
                                 <a:s>O</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1756">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> as </a:s>
                           <a:s r="1757">
                              <a:s>FHIR.CodeableConcept</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1758" locator="314:3-318:40" xsi:type="Query">
            <source localId="1703" locator="314:3-314:13" alias="O">
               <expression localId="1704" locator="314:3-314:11" name="ObsList" xsi:type="OperandRef"/>
            </source>
            <where localId="1705" locator="315:3-317:74" xsi:type="Or">
               <operand localId="1732" locator="316:5-316:70" xsi:type="Exists">
                  <operand localId="1729" locator="316:13-316:68" xsi:type="Query">
                     <source localId="1706" locator="316:13-316:25" alias="R">
                        <expression localId="1708" locator="316:13-316:23" path="result" xsi:type="Property">
                           <source localId="1707" locator="316:14" name="D" xsi:type="OperandRef"/>
                        </expression>
                     </source>
                     <where localId="1709" locator="316:27-316:68" xsi:type="Equal">
                        <signature localId="1727" name="t:String" xsi:type="NamedTypeSpecifier"/>
                        <signature localId="1728" name="t:String" xsi:type="NamedTypeSpecifier"/>
                        <operand localId="1722" locator="316:33-316:60" xsi:type="Last">
                           <source localId="1717" locator="316:38-316:59" xsi:type="Split">
                              <stringToSplit localId="1718" name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                                 <signature localId="1719" name="fhir:string" xsi:type="NamedTypeSpecifier"/>
                                 <operand localId="1711" locator="316:44-316:54" path="reference" scope="R" xsi:type="Property"/>
                              </stringToSplit>
                              <separator localId="1712" locator="316:56-316:58" valueType="t:String" value="/" xsi:type="Literal"/>
                           </source>
                        </operand>
                        <operand localId="1725" name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <signature localId="1726" name="fhir:string" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1724" locator="316:65-316:68" path="id" scope="O" xsi:type="Property"/>
                        </operand>
                     </where>
                  </operand>
               </operand>
               <operand localId="1752" locator="317:5-317:74" xsi:type="Exists">
                  <operand localId="1749" locator="317:13-317:72" xsi:type="Query">
                     <source localId="1733" locator="317:13-317:26" alias="oB">
                        <expression localId="1735" locator="317:13-317:23" path="basedOn" scope="O" xsi:type="Property"/>
                     </source>
                     <where localId="1748" locator="317:28-317:72" xsi:type="AnyTrue">
                        <source localId="1745" locator="317:42-317:70" xsi:type="Query">
                           <source localId="1736" locator="317:42-317:55" alias="dB">
                              <expression localId="1738" locator="317:42-317:52" path="basedOn" xsi:type="Property">
                                 <source localId="1737" locator="317:43" name="D" xsi:type="OperandRef"/>
                              </expression>
                           </source>
                           <return localId="1739" locator="317:57-317:70">
                              <expression localId="1740" locator="317:64-317:70" xsi:type="Equal">
                                 <signature localId="1743" name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 <signature localId="1744" name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 <operand localId="1741" locator="317:64-317:65" name="dB" xsi:type="AliasRef"/>
                                 <operand localId="1742" locator="317:69-317:70" name="oB" xsi:type="AliasRef"/>
                              </expression>
                           </return>
                        </source>
                     </where>
                  </operand>
               </operand>
            </where>
            <return localId="1753" locator="318:3-318:40">
               <expression localId="1754" locator="318:10-318:40" strict="false" xsi:type="As">
                  <operand localId="1756" locator="318:10-318:16" path="value" scope="O" xsi:type="Property"/>
                  <asTypeSpecifier localId="1757" locator="318:21-318:40" name="fhir:CodeableConcept" xsi:type="NamedTypeSpecifier"/>
               </expression>
            </return>
         </expression>
         <operand localId="1632" name="D">
            <operandTypeSpecifier localId="1631" locator="313:41-313:56" name="fhir:DiagnosticReport" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="1635" name="ObsList">
            <operandTypeSpecifier localId="1633" locator="313:67-313:83" xsi:type="ListTypeSpecifier">
               <elementType localId="1634" locator="313:72-313:82" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1759" locator="324:1-332:3" name="MostRecentLocalObservation" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1759">
               <a:s>//------------------------------------------------------------------------------
// Local observations
//------------------------------------------------------------------------------  

define function MostRecentLocalObservation(observations List&lt;FHIR.Observation>, encounter String, ObservationLookbackPeriod System.Quantity):
  </a:s>
               <a:s r="1801">
                  <a:s r="1801">
                     <a:s r="1767">
                        <a:s>C3F</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="1801">
                        <a:s>MostRecent(
    </a:s>
                        <a:s r="1795">
                           <a:s r="1788">
                              <a:s r="1783">
                                 <a:s>(</a:s>
                                 <a:s r="1783">
                                    <a:s>
                                       <a:s r="1768">
                                          <a:s r="1769">
                                             <a:s>
                                                <a:s>observations</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> O</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> </a:s>
                                    <a:s r="1770">
                                       <a:s>where </a:s>
                                       <a:s r="1770">
                                          <a:s r="1773">
                                             <a:s r="1771">
                                                <a:s>encounter</a:s>
                                             </a:s>
                                             <a:s> is not null</a:s>
                                          </a:s>
                                          <a:s> and </a:s>
                                          <a:s r="1774">
                                             <a:s r="1777">
                                                <a:s r="1776">
                                                   <a:s r="1775">
                                                      <a:s>O</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="1776">
                                                      <a:s>encounter</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="1777">
                                                   <a:s>reference</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> = </a:s>
                                             <a:s r="1778">
                                                <a:s>encounter</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>
    union
    </a:s>
                              <a:s r="1787">
                                 <a:s>(</a:s>
                                 <a:s r="1787">
                                    <a:s r="1784">
                                       <a:s>C3F</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1787">
                                       <a:s>ObservationLookBack(
      </a:s>
                                       <a:s r="1785">
                                          <a:s>observations</a:s>
                                       </a:s>
                                       <a:s>,
      </a:s>
                                       <a:s r="1786">
                                          <a:s>ObservationLookbackPeriod</a:s>
                                       </a:s>
                                       <a:s>
    )</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> except </a:s>
                           <a:s r="1793">
                              <a:s r="1794">{ null }</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
  )</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1801" locator="325:3-332:3" name="MostRecent" libraryName="C3F" xsi:type="FunctionRef">
            <operand localId="1795" locator="326:5-331:22" xsi:type="Except">
               <operand localId="1788" locator="326:5-331:6" xsi:type="Union">
                  <signature localId="1789" xsi:type="ListTypeSpecifier">
                     <elementType localId="1790" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <signature localId="1791" xsi:type="ListTypeSpecifier">
                     <elementType localId="1792" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
                  </signature>
                  <operand localId="1783" locator="326:5-326:86" xsi:type="Query">
                     <source localId="1768" locator="326:6-326:19" alias="O">
                        <expression localId="1769" locator="326:6-326:17" name="observations" xsi:type="OperandRef"/>
                     </source>
                     <where localId="1770" locator="326:21-326:85" xsi:type="And">
                        <operand localId="1773" locator="326:27-326:47" xsi:type="Not">
                           <operand localId="1772" locator="326:27-326:47" xsi:type="IsNull">
                              <operand localId="1771" locator="326:27-326:35" name="encounter" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand localId="1774" locator="326:53-326:85" xsi:type="Equal">
                           <signature localId="1781" name="t:String" xsi:type="NamedTypeSpecifier"/>
                           <signature localId="1782" name="t:String" xsi:type="NamedTypeSpecifier"/>
                           <operand localId="1779" name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                              <signature localId="1780" name="fhir:string" xsi:type="NamedTypeSpecifier"/>
                              <operand localId="1777" locator="326:53-326:73" path="reference" xsi:type="Property">
                                 <source localId="1776" locator="326:53-326:63" path="encounter" scope="O" xsi:type="Property"/>
                              </operand>
                           </operand>
                           <operand localId="1778" locator="326:77-326:85" name="encounter" xsi:type="OperandRef"/>
                        </operand>
                     </where>
                  </operand>
                  <operand localId="1787" locator="328:5-331:6" name="ObservationLookBack" libraryName="C3F" xsi:type="FunctionRef">
                     <operand localId="1785" locator="329:7-329:18" name="observations" xsi:type="OperandRef"/>
                     <operand localId="1786" locator="330:7-330:31" name="ObservationLookbackPeriod" xsi:type="OperandRef"/>
                  </operand>
               </operand>
               <operand localId="1796" xsi:type="Query">
                  <source localId="1797" alias="X">
                     <expression localId="1793" locator="331:15-331:22" xsi:type="List">
                        <element localId="1794" locator="331:17-331:20" xsi:type="Null"/>
                     </expression>
                  </source>
                  <return localId="1798" distinct="false">
                     <expression localId="1800" asType="fhir:Observation" xsi:type="As">
                        <operand localId="1799" name="X" xsi:type="AliasRef"/>
                     </expression>
                  </return>
               </operand>
            </operand>
         </expression>
         <operand localId="1762" name="observations">
            <operandTypeSpecifier localId="1760" locator="324:57-324:78" xsi:type="ListTypeSpecifier">
               <elementType localId="1761" locator="324:62-324:77" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand localId="1764" name="encounter">
            <operandTypeSpecifier localId="1763" locator="324:91-324:96" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand localId="1766" name="ObservationLookbackPeriod">
            <operandTypeSpecifier localId="1765" locator="324:125-324:139" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="1802" locator="334:1-341:8" name="SortedObservations" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1802">
               <a:s>define function SortedObservations(obs List&lt;FHIR.Observation>):
  </a:s>
               <a:s r="1865">
                  <a:s r="1865">
                     <a:s>
                        <a:s r="1806">
                           <a:s r="1807">
                              <a:s>
                                 <a:s>obs</a:s>
                              </a:s>
                           </a:s>
                           <a:s> o</a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="1859">
                        <a:s>sort by </a:s>
                        <a:s r="1858">
                           <a:s r="1857">
                              <a:s>Coalesce(
    </a:s>
                              <a:s r="1836">
                                 <a:s r="1833">
                                    <a:s>(</a:s>
                                    <a:s r="1833">
                                       <a:s r="1834">
                                          <a:s>effective</a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="1835">
                                          <a:s>FHIR.dateTime</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1836">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
    </a:s>
                              <a:s r="1840">
                                 <a:s r="1837">
                                    <a:s>(</a:s>
                                    <a:s r="1837">
                                       <a:s r="1838">
                                          <a:s>effective</a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="1839">
                                          <a:s>FHIR.instant</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1840">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
    </a:s>
                              <a:s r="1845">
                                 <a:s r="1844">
                                    <a:s r="1841">
                                       <a:s>(</a:s>
                                       <a:s r="1841">
                                          <a:s r="1842">
                                             <a:s>effective</a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="1843">
                                             <a:s>FHIR.Period</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1844">
                                       <a:s>&quot;end&quot;</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1845">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
    </a:s>
                              <a:s r="1850">
                                 <a:s r="1849">
                                    <a:s r="1846">
                                       <a:s>(</a:s>
                                       <a:s r="1846">
                                          <a:s r="1847">
                                             <a:s>effective</a:s>
                                          </a:s>
                                          <a:s> as </a:s>
                                          <a:s r="1848">
                                             <a:s>FHIR.Period</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="1849">
                                       <a:s>&quot;start&quot;</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1850">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
    </a:s>
                              <a:s r="1854">
                                 <a:s r="1851">
                                    <a:s>(</a:s>
                                    <a:s r="1851">
                                       <a:s r="1852">
                                          <a:s>issued</a:s>
                                       </a:s>
                                       <a:s> as </a:s>
                                       <a:s r="1853">
                                          <a:s>FHIR.instant</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="1854">
                                    <a:s>value</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
  )</a:s>
                           </a:s>
                           <a:s> desc</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1865" locator="335:3-341:8" xsi:type="Query">
            <source localId="1806" locator="335:3-335:7" alias="o">
               <expression localId="1807" locator="335:3-335:5" name="obs" xsi:type="OperandRef"/>
            </source>
            <sort localId="1859" locator="335:9-341:8">
               <by localId="1858" locator="335:17-341:8" direction="desc" xsi:type="ByExpression">
                  <expression localId="1857" locator="335:17-341:3" xsi:type="Coalesce">
                     <operand localId="1836" locator="336:5-336:38" path="value" xsi:type="Property">
                        <source localId="1833" locator="336:5-336:32" strict="false" xsi:type="As">
                           <operand localId="1834" locator="336:6-336:14" name="effective" xsi:type="IdentifierRef"/>
                           <asTypeSpecifier localId="1835" locator="336:19-336:31" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
                        </source>
                     </operand>
                     <operand localId="1840" locator="337:5-337:37" path="value" xsi:type="Property">
                        <source localId="1837" locator="337:5-337:31" strict="false" xsi:type="As">
                           <operand localId="1838" locator="337:6-337:14" name="effective" xsi:type="IdentifierRef"/>
                           <asTypeSpecifier localId="1839" locator="337:19-337:30" name="fhir:instant" xsi:type="NamedTypeSpecifier"/>
                        </source>
                     </operand>
                     <operand localId="1845" locator="338:5-338:42" path="value" xsi:type="Property">
                        <source localId="1844" locator="338:5-338:36" path="end" xsi:type="Property">
                           <source localId="1841" locator="338:5-338:30" strict="false" xsi:type="As">
                              <operand localId="1842" locator="338:6-338:14" name="effective" xsi:type="IdentifierRef"/>
                              <asTypeSpecifier localId="1843" locator="338:19-338:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </source>
                     </operand>
                     <operand localId="1850" locator="339:5-339:44" path="value" xsi:type="Property">
                        <source localId="1849" locator="339:5-339:38" path="start" xsi:type="Property">
                           <source localId="1846" locator="339:5-339:30" strict="false" xsi:type="As">
                              <operand localId="1847" locator="339:6-339:14" name="effective" xsi:type="IdentifierRef"/>
                              <asTypeSpecifier localId="1848" locator="339:19-339:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                           </source>
                        </source>
                     </operand>
                     <operand localId="1854" locator="340:5-340:34" path="value" xsi:type="Property">
                        <source localId="1851" locator="340:5-340:28" strict="false" xsi:type="As">
                           <operand localId="1852" locator="340:6-340:11" name="issued" xsi:type="IdentifierRef"/>
                           <asTypeSpecifier localId="1853" locator="340:16-340:27" name="fhir:instant" xsi:type="NamedTypeSpecifier"/>
                        </source>
                     </operand>
                  </expression>
               </by>
            </sort>
         </expression>
         <operand localId="1805" name="obs">
            <operandTypeSpecifier localId="1803" locator="334:40-334:61" xsi:type="ListTypeSpecifier">
               <elementType localId="1804" locator="334:45-334:60" name="fhir:Observation" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1866" locator="346:1-348:99" name="ServiceRequestsWithOrderIntent" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1866">
               <a:s>//------------------------------------------------------------------------------
// Service requests
//------------------------------------------------------------------------------
define function ServiceRequestsWithOrderIntent(requests List&lt;ServiceRequest>):
  </a:s>
               <a:s r="1883">
                  <a:s r="1883">
                     <a:s>
                        <a:s r="1870">
                           <a:s r="1871">
                              <a:s>
                                 <a:s>requests</a:s>
                              </a:s>
                           </a:s>
                           <a:s> O</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="1880">
                        <a:s>where </a:s>
                        <a:s r="1880">
                           <a:s r="1873">
                              <a:s r="1872">
                                 <a:s>O</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="1873">
                                 <a:s>intent</a:s>
                              </a:s>
                           </a:s>
                           <a:s> in </a:s>
                           <a:s r="1874">
                              <a:s>{</a:s>
                              <a:s r="1875">
                                 <a:s>'order'</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1876">
                                 <a:s>'original-order'</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1877">
                                 <a:s>'reflex-order'</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1878">
                                 <a:s>'filler-order'</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="1879">
                                 <a:s>'instance-order'</a:s>
                              </a:s>
                              <a:s>}</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1883" locator="347:3-348:99" xsi:type="Query">
            <source localId="1870" locator="347:3-347:12" alias="O">
               <expression localId="1871" locator="347:3-347:10" name="requests" xsi:type="OperandRef"/>
            </source>
            <where localId="1880" locator="348:5-348:99" xsi:type="In">
               <operand localId="1881" name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <signature localId="1882" name="fhir:ServiceRequestIntent" xsi:type="NamedTypeSpecifier"/>
                  <operand localId="1873" locator="348:11-348:18" path="intent" scope="O" xsi:type="Property"/>
               </operand>
               <operand localId="1874" locator="348:23-348:99" xsi:type="List">
                  <element localId="1875" locator="348:24-348:30" valueType="t:String" value="order" xsi:type="Literal"/>
                  <element localId="1876" locator="348:33-348:48" valueType="t:String" value="original-order" xsi:type="Literal"/>
                  <element localId="1877" locator="348:51-348:64" valueType="t:String" value="reflex-order" xsi:type="Literal"/>
                  <element localId="1878" locator="348:67-348:80" valueType="t:String" value="filler-order" xsi:type="Literal"/>
                  <element localId="1879" locator="348:83-348:98" valueType="t:String" value="instance-order" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
         <operand localId="1869" name="requests">
            <operandTypeSpecifier localId="1867" locator="346:57-346:76" xsi:type="ListTypeSpecifier">
               <elementType localId="1868" locator="346:62-346:75" name="fhir:ServiceRequest" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="1884" locator="350:1-351:97" name="ServiceRequestWithOrderIntent" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="1884">
               <a:s>define function ServiceRequestWithOrderIntent(request ServiceRequest):
  </a:s>
               <a:s r="1895">
                  <a:s r="1895">
                     <a:s r="1888">
                        <a:s r="1887">
                           <a:s>request</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="1888">
                           <a:s>intent</a:s>
                        </a:s>
                     </a:s>
                     <a:s> in </a:s>
                     <a:s r="1889">
                        <a:s>{</a:s>
                        <a:s r="1890">
                           <a:s>'order'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="1891">
                           <a:s>'original-order'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="1892">
                           <a:s>'reflex-order'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="1893">
                           <a:s>'filler-order'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="1894">
                           <a:s>'instance-order'</a:s>
                        </a:s>
                        <a:s>}</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="1895" locator="351:3-351:97" xsi:type="In">
            <operand localId="1896" name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
               <signature localId="1897" name="fhir:ServiceRequestIntent" xsi:type="NamedTypeSpecifier"/>
               <operand localId="1888" locator="351:3-351:16" path="intent" xsi:type="Property">
                  <source localId="1887" locator="351:3-351:9" name="request" xsi:type="OperandRef"/>
               </operand>
            </operand>
            <operand localId="1889" locator="351:21-351:97" xsi:type="List">
               <element localId="1890" locator="351:22-351:28" valueType="t:String" value="order" xsi:type="Literal"/>
               <element localId="1891" locator="351:31-351:46" valueType="t:String" value="original-order" xsi:type="Literal"/>
               <element localId="1892" locator="351:49-351:62" valueType="t:String" value="reflex-order" xsi:type="Literal"/>
               <element localId="1893" locator="351:65-351:78" valueType="t:String" value="filler-order" xsi:type="Literal"/>
               <element localId="1894" locator="351:81-351:96" valueType="t:String" value="instance-order" xsi:type="Literal"/>
            </operand>
         </expression>
         <operand localId="1886" name="request">
            <operandTypeSpecifier localId="1885" locator="350:55-350:68" name="fhir:ServiceRequest" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
   </statements>
</library>
